// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerStopS2C.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ServerStopS2C.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pro {

namespace {

const ::google::protobuf::Descriptor* ServerStopS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerStopS2C_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ServerStopS2C_2eproto() {
  protobuf_AddDesc_ServerStopS2C_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ServerStopS2C.proto");
  GOOGLE_CHECK(file != NULL);
  ServerStopS2C_descriptor_ = file->message_type(0);
  static const int ServerStopS2C_offsets_[1] = {
  };
  ServerStopS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerStopS2C_descriptor_,
      ServerStopS2C::default_instance_,
      ServerStopS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerStopS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerStopS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerStopS2C));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ServerStopS2C_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerStopS2C_descriptor_, &ServerStopS2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ServerStopS2C_2eproto() {
  delete ServerStopS2C::default_instance_;
  delete ServerStopS2C_reflection_;
}

void protobuf_AddDesc_ServerStopS2C_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ServerStopS2C.proto\022\003Pro\"\017\n\rServerStop"
    "S2C", 43);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerStopS2C.proto", &protobuf_RegisterTypes);
  ServerStopS2C::default_instance_ = new ServerStopS2C();
  ServerStopS2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ServerStopS2C_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ServerStopS2C_2eproto {
  StaticDescriptorInitializer_ServerStopS2C_2eproto() {
    protobuf_AddDesc_ServerStopS2C_2eproto();
  }
} static_descriptor_initializer_ServerStopS2C_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ServerStopS2C::ServerStopS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ServerStopS2C::InitAsDefaultInstance() {
}

ServerStopS2C::ServerStopS2C(const ServerStopS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ServerStopS2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerStopS2C::~ServerStopS2C() {
  SharedDtor();
}

void ServerStopS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerStopS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerStopS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerStopS2C_descriptor_;
}

const ServerStopS2C& ServerStopS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerStopS2C_2eproto();
  return *default_instance_;
}

ServerStopS2C* ServerStopS2C::default_instance_ = NULL;

ServerStopS2C* ServerStopS2C::New() const {
  return new ServerStopS2C;
}

void ServerStopS2C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerStopS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ServerStopS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ServerStopS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ServerStopS2C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerStopS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerStopS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerStopS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerStopS2C::MergeFrom(const ServerStopS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerStopS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerStopS2C::CopyFrom(const ServerStopS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerStopS2C::IsInitialized() const {

  return true;
}

void ServerStopS2C::Swap(ServerStopS2C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerStopS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerStopS2C_descriptor_;
  metadata.reflection = ServerStopS2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pro

// @@protoc_insertion_point(global_scope)
