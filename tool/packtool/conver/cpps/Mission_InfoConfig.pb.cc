// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mission_InfoConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Mission_InfoConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

namespace {

const ::google::protobuf::Descriptor* Mission_InfoConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mission_InfoConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Mission_5fInfoConfig_2eproto() {
  protobuf_AddDesc_Mission_5fInfoConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Mission_InfoConfig.proto");
  GOOGLE_CHECK(file != NULL);
  Mission_InfoConfig_descriptor_ = file->message_type(0);
  static const int Mission_InfoConfig_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, activity_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, membership_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, desciption_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, jump_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, var_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, jump_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, bonus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, param_),
  };
  Mission_InfoConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Mission_InfoConfig_descriptor_,
      Mission_InfoConfig::default_instance_,
      Mission_InfoConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mission_InfoConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Mission_InfoConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Mission_5fInfoConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Mission_InfoConfig_descriptor_, &Mission_InfoConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Mission_5fInfoConfig_2eproto() {
  delete Mission_InfoConfig::default_instance_;
  delete Mission_InfoConfig_reflection_;
}

void protobuf_AddDesc_Mission_5fInfoConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DianShiTech::Config::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030Mission_InfoConfig.proto\022\022DianShiTech."
    "Config\032\025ConfigTypeGroup.proto\"\317\001\n\022Missio"
    "n_InfoConfig\022\025\n\ractivity_type\030\002 \001(\005\022\022\n\nm"
    "embership\030\013 \001(\005\022\n\n\002id\030\001 \001(\005\022\022\n\ndesciptio"
    "n\030\010 \001(\t\022\016\n\006param1\030\005 \001(\005\022\022\n\njump_value\030\n "
    "\001(\005\022\013\n\003var\030\006 \001(\005\022\021\n\tjump_type\030\t \001(\005\022\r\n\005b"
    "onus\030\007 \003(\005\022\014\n\004type\030\003 \001(\005\022\r\n\005param\030\004 \001(\005", 279);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Mission_InfoConfig.proto", &protobuf_RegisterTypes);
  Mission_InfoConfig::default_instance_ = new Mission_InfoConfig();
  Mission_InfoConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Mission_5fInfoConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Mission_5fInfoConfig_2eproto {
  StaticDescriptorInitializer_Mission_5fInfoConfig_2eproto() {
    protobuf_AddDesc_Mission_5fInfoConfig_2eproto();
  }
} static_descriptor_initializer_Mission_5fInfoConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Mission_InfoConfig::kActivityTypeFieldNumber;
const int Mission_InfoConfig::kMembershipFieldNumber;
const int Mission_InfoConfig::kIdFieldNumber;
const int Mission_InfoConfig::kDesciptionFieldNumber;
const int Mission_InfoConfig::kParam1FieldNumber;
const int Mission_InfoConfig::kJumpValueFieldNumber;
const int Mission_InfoConfig::kVarFieldNumber;
const int Mission_InfoConfig::kJumpTypeFieldNumber;
const int Mission_InfoConfig::kBonusFieldNumber;
const int Mission_InfoConfig::kTypeFieldNumber;
const int Mission_InfoConfig::kParamFieldNumber;
#endif  // !_MSC_VER

Mission_InfoConfig::Mission_InfoConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Mission_InfoConfig::InitAsDefaultInstance() {
}

Mission_InfoConfig::Mission_InfoConfig(const Mission_InfoConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Mission_InfoConfig::SharedCtor() {
  _cached_size_ = 0;
  activity_type_ = 0;
  membership_ = 0;
  id_ = 0;
  desciption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  param1_ = 0;
  jump_value_ = 0;
  var_ = 0;
  jump_type_ = 0;
  type_ = 0;
  param_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Mission_InfoConfig::~Mission_InfoConfig() {
  SharedDtor();
}

void Mission_InfoConfig::SharedDtor() {
  if (desciption_ != &::google::protobuf::internal::kEmptyString) {
    delete desciption_;
  }
  if (this != default_instance_) {
  }
}

void Mission_InfoConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mission_InfoConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mission_InfoConfig_descriptor_;
}

const Mission_InfoConfig& Mission_InfoConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Mission_5fInfoConfig_2eproto();
  return *default_instance_;
}

Mission_InfoConfig* Mission_InfoConfig::default_instance_ = NULL;

Mission_InfoConfig* Mission_InfoConfig::New() const {
  return new Mission_InfoConfig;
}

void Mission_InfoConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_type_ = 0;
    membership_ = 0;
    id_ = 0;
    if (has_desciption()) {
      if (desciption_ != &::google::protobuf::internal::kEmptyString) {
        desciption_->clear();
      }
    }
    param1_ = 0;
    jump_value_ = 0;
    var_ = 0;
    jump_type_ = 0;
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    type_ = 0;
    param_ = 0;
  }
  bonus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Mission_InfoConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_type;
        break;
      }

      // optional int32 activity_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_type_)));
          set_has_activity_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_param;
        break;
      }

      // optional int32 param = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_param1;
        break;
      }

      // optional int32 param1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_var;
        break;
      }

      // optional int32 var = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_var:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &var_)));
          set_has_var();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_bonus;
        break;
      }

      // repeated int32 bonus = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bonus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_bonus())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bonus())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_bonus;
        if (input->ExpectTag(66)) goto parse_desciption;
        break;
      }

      // optional string desciption = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desciption:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desciption()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desciption().data(), this->desciption().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_jump_type;
        break;
      }

      // optional int32 jump_type = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jump_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jump_type_)));
          set_has_jump_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_jump_value;
        break;
      }

      // optional int32 jump_value = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jump_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jump_value_)));
          set_has_jump_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_membership;
        break;
      }

      // optional int32 membership = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_membership:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &membership_)));
          set_has_membership();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Mission_InfoConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 activity_type = 2;
  if (has_activity_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_type(), output);
  }

  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional int32 param = 4;
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->param(), output);
  }

  // optional int32 param1 = 5;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->param1(), output);
  }

  // optional int32 var = 6;
  if (has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->var(), output);
  }

  // repeated int32 bonus = 7;
  for (int i = 0; i < this->bonus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->bonus(i), output);
  }

  // optional string desciption = 8;
  if (has_desciption()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desciption().data(), this->desciption().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->desciption(), output);
  }

  // optional int32 jump_type = 9;
  if (has_jump_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->jump_type(), output);
  }

  // optional int32 jump_value = 10;
  if (has_jump_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->jump_value(), output);
  }

  // optional int32 membership = 11;
  if (has_membership()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->membership(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Mission_InfoConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 activity_type = 2;
  if (has_activity_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_type(), target);
  }

  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional int32 param = 4;
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->param(), target);
  }

  // optional int32 param1 = 5;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->param1(), target);
  }

  // optional int32 var = 6;
  if (has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->var(), target);
  }

  // repeated int32 bonus = 7;
  for (int i = 0; i < this->bonus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->bonus(i), target);
  }

  // optional string desciption = 8;
  if (has_desciption()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desciption().data(), this->desciption().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->desciption(), target);
  }

  // optional int32 jump_type = 9;
  if (has_jump_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->jump_type(), target);
  }

  // optional int32 jump_value = 10;
  if (has_jump_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->jump_value(), target);
  }

  // optional int32 membership = 11;
  if (has_membership()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->membership(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Mission_InfoConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_type = 2;
    if (has_activity_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_type());
    }

    // optional int32 membership = 11;
    if (has_membership()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->membership());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string desciption = 8;
    if (has_desciption()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desciption());
    }

    // optional int32 param1 = 5;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param1());
    }

    // optional int32 jump_value = 10;
    if (has_jump_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jump_value());
    }

    // optional int32 var = 6;
    if (has_var()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->var());
    }

    // optional int32 jump_type = 9;
    if (has_jump_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jump_type());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 param = 4;
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param());
    }

  }
  // repeated int32 bonus = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->bonus_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->bonus(i));
    }
    total_size += 1 * this->bonus_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mission_InfoConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Mission_InfoConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Mission_InfoConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Mission_InfoConfig::MergeFrom(const Mission_InfoConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  bonus_.MergeFrom(from.bonus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_type()) {
      set_activity_type(from.activity_type());
    }
    if (from.has_membership()) {
      set_membership(from.membership());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_desciption()) {
      set_desciption(from.desciption());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_jump_value()) {
      set_jump_value(from.jump_value());
    }
    if (from.has_var()) {
      set_var(from.var());
    }
    if (from.has_jump_type()) {
      set_jump_type(from.jump_type());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Mission_InfoConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mission_InfoConfig::CopyFrom(const Mission_InfoConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mission_InfoConfig::IsInitialized() const {

  return true;
}

void Mission_InfoConfig::Swap(Mission_InfoConfig* other) {
  if (other != this) {
    std::swap(activity_type_, other->activity_type_);
    std::swap(membership_, other->membership_);
    std::swap(id_, other->id_);
    std::swap(desciption_, other->desciption_);
    std::swap(param1_, other->param1_);
    std::swap(jump_value_, other->jump_value_);
    std::swap(var_, other->var_);
    std::swap(jump_type_, other->jump_type_);
    bonus_.Swap(&other->bonus_);
    std::swap(type_, other->type_);
    std::swap(param_, other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Mission_InfoConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mission_InfoConfig_descriptor_;
  metadata.reflection = Mission_InfoConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

// @@protoc_insertion_point(global_scope)
