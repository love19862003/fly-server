// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleInitDataConfig.proto

#ifndef PROTOBUF_BattleInitDataConfig_2eproto__INCLUDED
#define PROTOBUF_BattleInitDataConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleInitDataConfig_2eproto();
void protobuf_AssignDesc_BattleInitDataConfig_2eproto();
void protobuf_ShutdownFile_BattleInitDataConfig_2eproto();

class BattleInitDataConfig;

// ===================================================================

class BattleInitDataConfig : public ::google::protobuf::Message {
 public:
  BattleInitDataConfig();
  virtual ~BattleInitDataConfig();

  BattleInitDataConfig(const BattleInitDataConfig& from);

  inline BattleInitDataConfig& operator=(const BattleInitDataConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleInitDataConfig& default_instance();

  void Swap(BattleInitDataConfig* other);

  // implements Message ----------------------------------------------

  BattleInitDataConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleInitDataConfig& from);
  void MergeFrom(const BattleInitDataConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 battle_cost = 3;
  inline bool has_battle_cost() const;
  inline void clear_battle_cost();
  static const int kBattleCostFieldNumber = 3;
  inline ::google::protobuf::int32 battle_cost() const;
  inline void set_battle_cost(::google::protobuf::int32 value);

  // optional int32 challenge = 5;
  inline bool has_challenge() const;
  inline void clear_challenge();
  static const int kChallengeFieldNumber = 5;
  inline ::google::protobuf::int32 challenge() const;
  inline void set_challenge(::google::protobuf::int32 value);

  // optional int32 search_cost = 2;
  inline bool has_search_cost() const;
  inline void clear_search_cost();
  static const int kSearchCostFieldNumber = 2;
  inline ::google::protobuf::int32 search_cost() const;
  inline void set_search_cost(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 search_rank_count = 9;
  inline bool has_search_rank_count() const;
  inline void clear_search_rank_count();
  static const int kSearchRankCountFieldNumber = 9;
  inline ::google::protobuf::int32 search_rank_count() const;
  inline void set_search_rank_count(::google::protobuf::int32 value);

  // optional int32 revenge_cost = 10;
  inline bool has_revenge_cost() const;
  inline void clear_revenge_cost();
  static const int kRevengeCostFieldNumber = 10;
  inline ::google::protobuf::int32 revenge_cost() const;
  inline void set_revenge_cost(::google::protobuf::int32 value);

  // optional int32 hide_score = 14;
  inline bool has_hide_score() const;
  inline void clear_hide_score();
  static const int kHideScoreFieldNumber = 14;
  inline ::google::protobuf::int32 hide_score() const;
  inline void set_hide_score(::google::protobuf::int32 value);

  // optional int32 robot_score_diff = 11;
  inline bool has_robot_score_diff() const;
  inline void clear_robot_score_diff();
  static const int kRobotScoreDiffFieldNumber = 11;
  inline ::google::protobuf::int32 robot_score_diff() const;
  inline void set_robot_score_diff(::google::protobuf::int32 value);

  // optional int32 base_rank_point = 4;
  inline bool has_base_rank_point() const;
  inline void clear_base_rank_point();
  static const int kBaseRankPointFieldNumber = 4;
  inline ::google::protobuf::int32 base_rank_point() const;
  inline void set_base_rank_point(::google::protobuf::int32 value);

  // optional int32 level_reduce = 7;
  inline bool has_level_reduce() const;
  inline void clear_level_reduce();
  static const int kLevelReduceFieldNumber = 7;
  inline ::google::protobuf::int32 level_reduce() const;
  inline void set_level_reduce(::google::protobuf::int32 value);

  // optional int32 robot_talent_point = 13;
  inline bool has_robot_talent_point() const;
  inline void clear_robot_talent_point();
  static const int kRobotTalentPointFieldNumber = 13;
  inline ::google::protobuf::int32 robot_talent_point() const;
  inline void set_robot_talent_point(::google::protobuf::int32 value);

  // optional int32 robot_coin = 12;
  inline bool has_robot_coin() const;
  inline void clear_robot_coin();
  static const int kRobotCoinFieldNumber = 12;
  inline ::google::protobuf::int32 robot_coin() const;
  inline void set_robot_coin(::google::protobuf::int32 value);

  // optional int32 rest_date = 6;
  inline bool has_rest_date() const;
  inline void clear_rest_date();
  static const int kRestDateFieldNumber = 6;
  inline ::google::protobuf::int32 rest_date() const;
  inline void set_rest_date(::google::protobuf::int32 value);

  // optional int32 level_increase = 8;
  inline bool has_level_increase() const;
  inline void clear_level_increase();
  static const int kLevelIncreaseFieldNumber = 8;
  inline ::google::protobuf::int32 level_increase() const;
  inline void set_level_increase(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.BattleInitDataConfig)
 private:
  inline void set_has_battle_cost();
  inline void clear_has_battle_cost();
  inline void set_has_challenge();
  inline void clear_has_challenge();
  inline void set_has_search_cost();
  inline void clear_has_search_cost();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_search_rank_count();
  inline void clear_has_search_rank_count();
  inline void set_has_revenge_cost();
  inline void clear_has_revenge_cost();
  inline void set_has_hide_score();
  inline void clear_has_hide_score();
  inline void set_has_robot_score_diff();
  inline void clear_has_robot_score_diff();
  inline void set_has_base_rank_point();
  inline void clear_has_base_rank_point();
  inline void set_has_level_reduce();
  inline void clear_has_level_reduce();
  inline void set_has_robot_talent_point();
  inline void clear_has_robot_talent_point();
  inline void set_has_robot_coin();
  inline void clear_has_robot_coin();
  inline void set_has_rest_date();
  inline void clear_has_rest_date();
  inline void set_has_level_increase();
  inline void clear_has_level_increase();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 battle_cost_;
  ::google::protobuf::int32 challenge_;
  ::google::protobuf::int32 search_cost_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 search_rank_count_;
  ::google::protobuf::int32 revenge_cost_;
  ::google::protobuf::int32 hide_score_;
  ::google::protobuf::int32 robot_score_diff_;
  ::google::protobuf::int32 base_rank_point_;
  ::google::protobuf::int32 level_reduce_;
  ::google::protobuf::int32 robot_talent_point_;
  ::google::protobuf::int32 robot_coin_;
  ::google::protobuf::int32 rest_date_;
  ::google::protobuf::int32 level_increase_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_BattleInitDataConfig_2eproto();
  friend void protobuf_AssignDesc_BattleInitDataConfig_2eproto();
  friend void protobuf_ShutdownFile_BattleInitDataConfig_2eproto();

  void InitAsDefaultInstance();
  static BattleInitDataConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleInitDataConfig

// optional int32 battle_cost = 3;
inline bool BattleInitDataConfig::has_battle_cost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleInitDataConfig::set_has_battle_cost() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleInitDataConfig::clear_has_battle_cost() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleInitDataConfig::clear_battle_cost() {
  battle_cost_ = 0;
  clear_has_battle_cost();
}
inline ::google::protobuf::int32 BattleInitDataConfig::battle_cost() const {
  return battle_cost_;
}
inline void BattleInitDataConfig::set_battle_cost(::google::protobuf::int32 value) {
  set_has_battle_cost();
  battle_cost_ = value;
}

// optional int32 challenge = 5;
inline bool BattleInitDataConfig::has_challenge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleInitDataConfig::set_has_challenge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleInitDataConfig::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleInitDataConfig::clear_challenge() {
  challenge_ = 0;
  clear_has_challenge();
}
inline ::google::protobuf::int32 BattleInitDataConfig::challenge() const {
  return challenge_;
}
inline void BattleInitDataConfig::set_challenge(::google::protobuf::int32 value) {
  set_has_challenge();
  challenge_ = value;
}

// optional int32 search_cost = 2;
inline bool BattleInitDataConfig::has_search_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleInitDataConfig::set_has_search_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleInitDataConfig::clear_has_search_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleInitDataConfig::clear_search_cost() {
  search_cost_ = 0;
  clear_has_search_cost();
}
inline ::google::protobuf::int32 BattleInitDataConfig::search_cost() const {
  return search_cost_;
}
inline void BattleInitDataConfig::set_search_cost(::google::protobuf::int32 value) {
  set_has_search_cost();
  search_cost_ = value;
}

// optional int32 id = 1;
inline bool BattleInitDataConfig::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleInitDataConfig::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleInitDataConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleInitDataConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BattleInitDataConfig::id() const {
  return id_;
}
inline void BattleInitDataConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 search_rank_count = 9;
inline bool BattleInitDataConfig::has_search_rank_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleInitDataConfig::set_has_search_rank_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleInitDataConfig::clear_has_search_rank_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleInitDataConfig::clear_search_rank_count() {
  search_rank_count_ = 0;
  clear_has_search_rank_count();
}
inline ::google::protobuf::int32 BattleInitDataConfig::search_rank_count() const {
  return search_rank_count_;
}
inline void BattleInitDataConfig::set_search_rank_count(::google::protobuf::int32 value) {
  set_has_search_rank_count();
  search_rank_count_ = value;
}

// optional int32 revenge_cost = 10;
inline bool BattleInitDataConfig::has_revenge_cost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleInitDataConfig::set_has_revenge_cost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleInitDataConfig::clear_has_revenge_cost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleInitDataConfig::clear_revenge_cost() {
  revenge_cost_ = 0;
  clear_has_revenge_cost();
}
inline ::google::protobuf::int32 BattleInitDataConfig::revenge_cost() const {
  return revenge_cost_;
}
inline void BattleInitDataConfig::set_revenge_cost(::google::protobuf::int32 value) {
  set_has_revenge_cost();
  revenge_cost_ = value;
}

// optional int32 hide_score = 14;
inline bool BattleInitDataConfig::has_hide_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleInitDataConfig::set_has_hide_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleInitDataConfig::clear_has_hide_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleInitDataConfig::clear_hide_score() {
  hide_score_ = 0;
  clear_has_hide_score();
}
inline ::google::protobuf::int32 BattleInitDataConfig::hide_score() const {
  return hide_score_;
}
inline void BattleInitDataConfig::set_hide_score(::google::protobuf::int32 value) {
  set_has_hide_score();
  hide_score_ = value;
}

// optional int32 robot_score_diff = 11;
inline bool BattleInitDataConfig::has_robot_score_diff() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattleInitDataConfig::set_has_robot_score_diff() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattleInitDataConfig::clear_has_robot_score_diff() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattleInitDataConfig::clear_robot_score_diff() {
  robot_score_diff_ = 0;
  clear_has_robot_score_diff();
}
inline ::google::protobuf::int32 BattleInitDataConfig::robot_score_diff() const {
  return robot_score_diff_;
}
inline void BattleInitDataConfig::set_robot_score_diff(::google::protobuf::int32 value) {
  set_has_robot_score_diff();
  robot_score_diff_ = value;
}

// optional int32 base_rank_point = 4;
inline bool BattleInitDataConfig::has_base_rank_point() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BattleInitDataConfig::set_has_base_rank_point() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BattleInitDataConfig::clear_has_base_rank_point() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BattleInitDataConfig::clear_base_rank_point() {
  base_rank_point_ = 0;
  clear_has_base_rank_point();
}
inline ::google::protobuf::int32 BattleInitDataConfig::base_rank_point() const {
  return base_rank_point_;
}
inline void BattleInitDataConfig::set_base_rank_point(::google::protobuf::int32 value) {
  set_has_base_rank_point();
  base_rank_point_ = value;
}

// optional int32 level_reduce = 7;
inline bool BattleInitDataConfig::has_level_reduce() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BattleInitDataConfig::set_has_level_reduce() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BattleInitDataConfig::clear_has_level_reduce() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BattleInitDataConfig::clear_level_reduce() {
  level_reduce_ = 0;
  clear_has_level_reduce();
}
inline ::google::protobuf::int32 BattleInitDataConfig::level_reduce() const {
  return level_reduce_;
}
inline void BattleInitDataConfig::set_level_reduce(::google::protobuf::int32 value) {
  set_has_level_reduce();
  level_reduce_ = value;
}

// optional int32 robot_talent_point = 13;
inline bool BattleInitDataConfig::has_robot_talent_point() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BattleInitDataConfig::set_has_robot_talent_point() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BattleInitDataConfig::clear_has_robot_talent_point() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BattleInitDataConfig::clear_robot_talent_point() {
  robot_talent_point_ = 0;
  clear_has_robot_talent_point();
}
inline ::google::protobuf::int32 BattleInitDataConfig::robot_talent_point() const {
  return robot_talent_point_;
}
inline void BattleInitDataConfig::set_robot_talent_point(::google::protobuf::int32 value) {
  set_has_robot_talent_point();
  robot_talent_point_ = value;
}

// optional int32 robot_coin = 12;
inline bool BattleInitDataConfig::has_robot_coin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BattleInitDataConfig::set_has_robot_coin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BattleInitDataConfig::clear_has_robot_coin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BattleInitDataConfig::clear_robot_coin() {
  robot_coin_ = 0;
  clear_has_robot_coin();
}
inline ::google::protobuf::int32 BattleInitDataConfig::robot_coin() const {
  return robot_coin_;
}
inline void BattleInitDataConfig::set_robot_coin(::google::protobuf::int32 value) {
  set_has_robot_coin();
  robot_coin_ = value;
}

// optional int32 rest_date = 6;
inline bool BattleInitDataConfig::has_rest_date() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BattleInitDataConfig::set_has_rest_date() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BattleInitDataConfig::clear_has_rest_date() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BattleInitDataConfig::clear_rest_date() {
  rest_date_ = 0;
  clear_has_rest_date();
}
inline ::google::protobuf::int32 BattleInitDataConfig::rest_date() const {
  return rest_date_;
}
inline void BattleInitDataConfig::set_rest_date(::google::protobuf::int32 value) {
  set_has_rest_date();
  rest_date_ = value;
}

// optional int32 level_increase = 8;
inline bool BattleInitDataConfig::has_level_increase() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BattleInitDataConfig::set_has_level_increase() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BattleInitDataConfig::clear_has_level_increase() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BattleInitDataConfig::clear_level_increase() {
  level_increase_ = 0;
  clear_has_level_increase();
}
inline ::google::protobuf::int32 BattleInitDataConfig::level_increase() const {
  return level_increase_;
}
inline void BattleInitDataConfig::set_level_increase(::google::protobuf::int32 value) {
  set_has_level_increase();
  level_increase_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleInitDataConfig_2eproto__INCLUDED
