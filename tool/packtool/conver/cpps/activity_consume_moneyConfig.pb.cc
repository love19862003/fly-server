// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activity_consume_moneyConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "activity_consume_moneyConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

namespace {

const ::google::protobuf::Descriptor* activity_consume_moneyConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  activity_consume_moneyConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_activity_5fconsume_5fmoneyConfig_2eproto() {
  protobuf_AddDesc_activity_5fconsume_5fmoneyConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "activity_consume_moneyConfig.proto");
  GOOGLE_CHECK(file != NULL);
  activity_consume_moneyConfig_descriptor_ = file->message_type(0);
  static const int activity_consume_moneyConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, act_same_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, drop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, activity_id_),
  };
  activity_consume_moneyConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      activity_consume_moneyConfig_descriptor_,
      activity_consume_moneyConfig::default_instance_,
      activity_consume_moneyConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(activity_consume_moneyConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(activity_consume_moneyConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_activity_5fconsume_5fmoneyConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    activity_consume_moneyConfig_descriptor_, &activity_consume_moneyConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_activity_5fconsume_5fmoneyConfig_2eproto() {
  delete activity_consume_moneyConfig::default_instance_;
  delete activity_consume_moneyConfig_reflection_;
}

void protobuf_AddDesc_activity_5fconsume_5fmoneyConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DianShiTech::Config::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"activity_consume_moneyConfig.proto\022\022Di"
    "anShiTech.Config\032\025ConfigTypeGroup.proto\""
    "s\n\034activity_consume_moneyConfig\022\026\n\016act_s"
    "ame_index\030\005 \001(\005\022\014\n\004drop\030\003 \003(\005\022\n\n\002id\030\001 \001("
    "\005\022\014\n\004data\030\004 \001(\005\022\023\n\013activity_id\030\002 \001(\005", 196);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "activity_consume_moneyConfig.proto", &protobuf_RegisterTypes);
  activity_consume_moneyConfig::default_instance_ = new activity_consume_moneyConfig();
  activity_consume_moneyConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_activity_5fconsume_5fmoneyConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_activity_5fconsume_5fmoneyConfig_2eproto {
  StaticDescriptorInitializer_activity_5fconsume_5fmoneyConfig_2eproto() {
    protobuf_AddDesc_activity_5fconsume_5fmoneyConfig_2eproto();
  }
} static_descriptor_initializer_activity_5fconsume_5fmoneyConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int activity_consume_moneyConfig::kActSameIndexFieldNumber;
const int activity_consume_moneyConfig::kDropFieldNumber;
const int activity_consume_moneyConfig::kIdFieldNumber;
const int activity_consume_moneyConfig::kDataFieldNumber;
const int activity_consume_moneyConfig::kActivityIdFieldNumber;
#endif  // !_MSC_VER

activity_consume_moneyConfig::activity_consume_moneyConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void activity_consume_moneyConfig::InitAsDefaultInstance() {
}

activity_consume_moneyConfig::activity_consume_moneyConfig(const activity_consume_moneyConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void activity_consume_moneyConfig::SharedCtor() {
  _cached_size_ = 0;
  act_same_index_ = 0;
  id_ = 0;
  data_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

activity_consume_moneyConfig::~activity_consume_moneyConfig() {
  SharedDtor();
}

void activity_consume_moneyConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void activity_consume_moneyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* activity_consume_moneyConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return activity_consume_moneyConfig_descriptor_;
}

const activity_consume_moneyConfig& activity_consume_moneyConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activity_5fconsume_5fmoneyConfig_2eproto();
  return *default_instance_;
}

activity_consume_moneyConfig* activity_consume_moneyConfig::default_instance_ = NULL;

activity_consume_moneyConfig* activity_consume_moneyConfig::New() const {
  return new activity_consume_moneyConfig;
}

void activity_consume_moneyConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_same_index_ = 0;
    id_ = 0;
    data_ = 0;
    activity_id_ = 0;
  }
  drop_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool activity_consume_moneyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }

      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_drop;
        break;
      }

      // repeated int32 drop = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_drop())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_drop())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_drop;
        if (input->ExpectTag(32)) goto parse_data;
        break;
      }

      // optional int32 data = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_act_same_index;
        break;
      }

      // optional int32 act_same_index = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_same_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_same_index_)));
          set_has_act_same_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void activity_consume_moneyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }

  // repeated int32 drop = 3;
  for (int i = 0; i < this->drop_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->drop(i), output);
  }

  // optional int32 data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->data(), output);
  }

  // optional int32 act_same_index = 5;
  if (has_act_same_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->act_same_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* activity_consume_moneyConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }

  // repeated int32 drop = 3;
  for (int i = 0; i < this->drop_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->drop(i), target);
  }

  // optional int32 data = 4;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->data(), target);
  }

  // optional int32 act_same_index = 5;
  if (has_act_same_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->act_same_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int activity_consume_moneyConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_same_index = 5;
    if (has_act_same_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_same_index());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data());
    }

    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }

  }
  // repeated int32 drop = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->drop_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->drop(i));
    }
    total_size += 1 * this->drop_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void activity_consume_moneyConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const activity_consume_moneyConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const activity_consume_moneyConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void activity_consume_moneyConfig::MergeFrom(const activity_consume_moneyConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  drop_.MergeFrom(from.drop_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_same_index()) {
      set_act_same_index(from.act_same_index());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void activity_consume_moneyConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void activity_consume_moneyConfig::CopyFrom(const activity_consume_moneyConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool activity_consume_moneyConfig::IsInitialized() const {

  return true;
}

void activity_consume_moneyConfig::Swap(activity_consume_moneyConfig* other) {
  if (other != this) {
    std::swap(act_same_index_, other->act_same_index_);
    drop_.Swap(&other->drop_);
    std::swap(id_, other->id_);
    std::swap(data_, other->data_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata activity_consume_moneyConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = activity_consume_moneyConfig_descriptor_;
  metadata.reflection = activity_consume_moneyConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

// @@protoc_insertion_point(global_scope)
