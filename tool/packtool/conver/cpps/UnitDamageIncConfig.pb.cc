// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnitDamageIncConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UnitDamageIncConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

namespace {

const ::google::protobuf::Descriptor* UnitDamageIncConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitDamageIncConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UnitDamageIncConfig_2eproto() {
  protobuf_AddDesc_UnitDamageIncConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UnitDamageIncConfig.proto");
  GOOGLE_CHECK(file != NULL);
  UnitDamageIncConfig_descriptor_ = file->message_type(0);
  static const int UnitDamageIncConfig_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, max_damage_inc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, unit_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, min_damage_inc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, units_),
  };
  UnitDamageIncConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnitDamageIncConfig_descriptor_,
      UnitDamageIncConfig::default_instance_,
      UnitDamageIncConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitDamageIncConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnitDamageIncConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UnitDamageIncConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnitDamageIncConfig_descriptor_, &UnitDamageIncConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UnitDamageIncConfig_2eproto() {
  delete UnitDamageIncConfig::default_instance_;
  delete UnitDamageIncConfig_reflection_;
}

void protobuf_AddDesc_UnitDamageIncConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DianShiTech::Config::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031UnitDamageIncConfig.proto\022\022DianShiTech"
    ".Config\032\025ConfigTypeGroup.proto\"\247\001\n\023UnitD"
    "amageIncConfig\022\026\n\016max_damage_inc\030\005 \003(\005\022\014"
    "\n\004step\030\006 \003(\005\022\n\n\002id\030\001 \001(\005\022\022\n\nunit_count\030\002"
    " \003(\005\022\026\n\016min_damage_inc\030\004 \003(\005\0222\n\005units\030\003 "
    "\003(\0132#.DianShiTech.Config.ConfigTypeGroup", 240);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UnitDamageIncConfig.proto", &protobuf_RegisterTypes);
  UnitDamageIncConfig::default_instance_ = new UnitDamageIncConfig();
  UnitDamageIncConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UnitDamageIncConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UnitDamageIncConfig_2eproto {
  StaticDescriptorInitializer_UnitDamageIncConfig_2eproto() {
    protobuf_AddDesc_UnitDamageIncConfig_2eproto();
  }
} static_descriptor_initializer_UnitDamageIncConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UnitDamageIncConfig::kMaxDamageIncFieldNumber;
const int UnitDamageIncConfig::kStepFieldNumber;
const int UnitDamageIncConfig::kIdFieldNumber;
const int UnitDamageIncConfig::kUnitCountFieldNumber;
const int UnitDamageIncConfig::kMinDamageIncFieldNumber;
const int UnitDamageIncConfig::kUnitsFieldNumber;
#endif  // !_MSC_VER

UnitDamageIncConfig::UnitDamageIncConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnitDamageIncConfig::InitAsDefaultInstance() {
}

UnitDamageIncConfig::UnitDamageIncConfig(const UnitDamageIncConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnitDamageIncConfig::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnitDamageIncConfig::~UnitDamageIncConfig() {
  SharedDtor();
}

void UnitDamageIncConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnitDamageIncConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitDamageIncConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitDamageIncConfig_descriptor_;
}

const UnitDamageIncConfig& UnitDamageIncConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UnitDamageIncConfig_2eproto();
  return *default_instance_;
}

UnitDamageIncConfig* UnitDamageIncConfig::default_instance_ = NULL;

UnitDamageIncConfig* UnitDamageIncConfig::New() const {
  return new UnitDamageIncConfig;
}

void UnitDamageIncConfig::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    id_ = 0;
  }
  max_damage_inc_.Clear();
  step_.Clear();
  unit_count_.Clear();
  min_damage_inc_.Clear();
  units_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnitDamageIncConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_unit_count;
        break;
      }

      // repeated int32 unit_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unit_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_unit_count())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unit_count())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_unit_count;
        if (input->ExpectTag(26)) goto parse_units;
        break;
      }

      // repeated .DianShiTech.Config.ConfigTypeGroup units = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_units:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_units()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_units;
        if (input->ExpectTag(32)) goto parse_min_damage_inc;
        break;
      }

      // repeated int32 min_damage_inc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_damage_inc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_min_damage_inc())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_min_damage_inc())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_min_damage_inc;
        if (input->ExpectTag(40)) goto parse_max_damage_inc;
        break;
      }

      // repeated int32 max_damage_inc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_damage_inc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_max_damage_inc())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_max_damage_inc())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_max_damage_inc;
        if (input->ExpectTag(48)) goto parse_step;
        break;
      }

      // repeated int32 step = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_step())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_step())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_step;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnitDamageIncConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated int32 unit_count = 2;
  for (int i = 0; i < this->unit_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->unit_count(i), output);
  }

  // repeated .DianShiTech.Config.ConfigTypeGroup units = 3;
  for (int i = 0; i < this->units_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->units(i), output);
  }

  // repeated int32 min_damage_inc = 4;
  for (int i = 0; i < this->min_damage_inc_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->min_damage_inc(i), output);
  }

  // repeated int32 max_damage_inc = 5;
  for (int i = 0; i < this->max_damage_inc_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->max_damage_inc(i), output);
  }

  // repeated int32 step = 6;
  for (int i = 0; i < this->step_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->step(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnitDamageIncConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated int32 unit_count = 2;
  for (int i = 0; i < this->unit_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->unit_count(i), target);
  }

  // repeated .DianShiTech.Config.ConfigTypeGroup units = 3;
  for (int i = 0; i < this->units_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->units(i), target);
  }

  // repeated int32 min_damage_inc = 4;
  for (int i = 0; i < this->min_damage_inc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->min_damage_inc(i), target);
  }

  // repeated int32 max_damage_inc = 5;
  for (int i = 0; i < this->max_damage_inc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->max_damage_inc(i), target);
  }

  // repeated int32 step = 6;
  for (int i = 0; i < this->step_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->step(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnitDamageIncConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  // repeated int32 max_damage_inc = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->max_damage_inc_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->max_damage_inc(i));
    }
    total_size += 1 * this->max_damage_inc_size() + data_size;
  }

  // repeated int32 step = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->step_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->step(i));
    }
    total_size += 1 * this->step_size() + data_size;
  }

  // repeated int32 unit_count = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->unit_count_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unit_count(i));
    }
    total_size += 1 * this->unit_count_size() + data_size;
  }

  // repeated int32 min_damage_inc = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->min_damage_inc_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->min_damage_inc(i));
    }
    total_size += 1 * this->min_damage_inc_size() + data_size;
  }

  // repeated .DianShiTech.Config.ConfigTypeGroup units = 3;
  total_size += 1 * this->units_size();
  for (int i = 0; i < this->units_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->units(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitDamageIncConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnitDamageIncConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnitDamageIncConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnitDamageIncConfig::MergeFrom(const UnitDamageIncConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  max_damage_inc_.MergeFrom(from.max_damage_inc_);
  step_.MergeFrom(from.step_);
  unit_count_.MergeFrom(from.unit_count_);
  min_damage_inc_.MergeFrom(from.min_damage_inc_);
  units_.MergeFrom(from.units_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnitDamageIncConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitDamageIncConfig::CopyFrom(const UnitDamageIncConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitDamageIncConfig::IsInitialized() const {

  return true;
}

void UnitDamageIncConfig::Swap(UnitDamageIncConfig* other) {
  if (other != this) {
    max_damage_inc_.Swap(&other->max_damage_inc_);
    step_.Swap(&other->step_);
    std::swap(id_, other->id_);
    unit_count_.Swap(&other->unit_count_);
    min_damage_inc_.Swap(&other->min_damage_inc_);
    units_.Swap(&other->units_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnitDamageIncConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitDamageIncConfig_descriptor_;
  metadata.reflection = UnitDamageIncConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

// @@protoc_insertion_point(global_scope)
