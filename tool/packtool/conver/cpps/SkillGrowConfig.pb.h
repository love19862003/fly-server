// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillGrowConfig.proto

#ifndef PROTOBUF_SkillGrowConfig_2eproto__INCLUDED
#define PROTOBUF_SkillGrowConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SkillGrowConfig_2eproto();
void protobuf_AssignDesc_SkillGrowConfig_2eproto();
void protobuf_ShutdownFile_SkillGrowConfig_2eproto();

class SkillGrowConfig;

// ===================================================================

class SkillGrowConfig : public ::google::protobuf::Message {
 public:
  SkillGrowConfig();
  virtual ~SkillGrowConfig();

  SkillGrowConfig(const SkillGrowConfig& from);

  inline SkillGrowConfig& operator=(const SkillGrowConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillGrowConfig& default_instance();

  void Swap(SkillGrowConfig* other);

  // implements Message ----------------------------------------------

  SkillGrowConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillGrowConfig& from);
  void MergeFrom(const SkillGrowConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_level = 4;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 4;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 min_level = 3;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 3;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // repeated int32 rate = 5;
  inline int rate_size() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 5;
  inline ::google::protobuf::int32 rate(int index) const;
  inline void set_rate(int index, ::google::protobuf::int32 value);
  inline void add_rate(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rate();

  // optional int32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.SkillGrowConfig)
 private:
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 max_level_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rate_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SkillGrowConfig_2eproto();
  friend void protobuf_AssignDesc_SkillGrowConfig_2eproto();
  friend void protobuf_ShutdownFile_SkillGrowConfig_2eproto();

  void InitAsDefaultInstance();
  static SkillGrowConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillGrowConfig

// optional int32 max_level = 4;
inline bool SkillGrowConfig::has_max_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillGrowConfig::set_has_max_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillGrowConfig::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillGrowConfig::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 SkillGrowConfig::max_level() const {
  return max_level_;
}
inline void SkillGrowConfig::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// optional int32 id = 1;
inline bool SkillGrowConfig::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillGrowConfig::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillGrowConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillGrowConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillGrowConfig::id() const {
  return id_;
}
inline void SkillGrowConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 min_level = 3;
inline bool SkillGrowConfig::has_min_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillGrowConfig::set_has_min_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillGrowConfig::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillGrowConfig::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 SkillGrowConfig::min_level() const {
  return min_level_;
}
inline void SkillGrowConfig::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// repeated int32 rate = 5;
inline int SkillGrowConfig::rate_size() const {
  return rate_.size();
}
inline void SkillGrowConfig::clear_rate() {
  rate_.Clear();
}
inline ::google::protobuf::int32 SkillGrowConfig::rate(int index) const {
  return rate_.Get(index);
}
inline void SkillGrowConfig::set_rate(int index, ::google::protobuf::int32 value) {
  rate_.Set(index, value);
}
inline void SkillGrowConfig::add_rate(::google::protobuf::int32 value) {
  rate_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillGrowConfig::rate() const {
  return rate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillGrowConfig::mutable_rate() {
  return &rate_;
}

// optional int32 skill_id = 2;
inline bool SkillGrowConfig::has_skill_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillGrowConfig::set_has_skill_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillGrowConfig::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillGrowConfig::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 SkillGrowConfig::skill_id() const {
  return skill_id_;
}
inline void SkillGrowConfig::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SkillGrowConfig_2eproto__INCLUDED
