// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LivenessBonusConfig.proto

#ifndef PROTOBUF_LivenessBonusConfig_2eproto__INCLUDED
#define PROTOBUF_LivenessBonusConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LivenessBonusConfig_2eproto();
void protobuf_AssignDesc_LivenessBonusConfig_2eproto();
void protobuf_ShutdownFile_LivenessBonusConfig_2eproto();

class LivenessBonusConfig;

// ===================================================================

class LivenessBonusConfig : public ::google::protobuf::Message {
 public:
  LivenessBonusConfig();
  virtual ~LivenessBonusConfig();

  LivenessBonusConfig(const LivenessBonusConfig& from);

  inline LivenessBonusConfig& operator=(const LivenessBonusConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LivenessBonusConfig& default_instance();

  void Swap(LivenessBonusConfig* other);

  // implements Message ----------------------------------------------

  LivenessBonusConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LivenessBonusConfig& from);
  void MergeFrom(const LivenessBonusConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 liveness_value = 2;
  inline bool has_liveness_value() const;
  inline void clear_liveness_value();
  static const int kLivenessValueFieldNumber = 2;
  inline ::google::protobuf::int32 liveness_value() const;
  inline void set_liveness_value(::google::protobuf::int32 value);

  // repeated .DianShiTech.Config.ConfigTypeGroup bonus = 3;
  inline int bonus_size() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 3;
  inline const ::DianShiTech::Config::ConfigTypeGroup& bonus(int index) const;
  inline ::DianShiTech::Config::ConfigTypeGroup* mutable_bonus(int index);
  inline ::DianShiTech::Config::ConfigTypeGroup* add_bonus();
  inline const ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >&
      bonus() const;
  inline ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >*
      mutable_bonus();

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.LivenessBonusConfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_liveness_value();
  inline void clear_has_liveness_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 liveness_value_;
  ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup > bonus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_LivenessBonusConfig_2eproto();
  friend void protobuf_AssignDesc_LivenessBonusConfig_2eproto();
  friend void protobuf_ShutdownFile_LivenessBonusConfig_2eproto();

  void InitAsDefaultInstance();
  static LivenessBonusConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// LivenessBonusConfig

// optional int32 id = 1;
inline bool LivenessBonusConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LivenessBonusConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LivenessBonusConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LivenessBonusConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LivenessBonusConfig::id() const {
  return id_;
}
inline void LivenessBonusConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 liveness_value = 2;
inline bool LivenessBonusConfig::has_liveness_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LivenessBonusConfig::set_has_liveness_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LivenessBonusConfig::clear_has_liveness_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LivenessBonusConfig::clear_liveness_value() {
  liveness_value_ = 0;
  clear_has_liveness_value();
}
inline ::google::protobuf::int32 LivenessBonusConfig::liveness_value() const {
  return liveness_value_;
}
inline void LivenessBonusConfig::set_liveness_value(::google::protobuf::int32 value) {
  set_has_liveness_value();
  liveness_value_ = value;
}

// repeated .DianShiTech.Config.ConfigTypeGroup bonus = 3;
inline int LivenessBonusConfig::bonus_size() const {
  return bonus_.size();
}
inline void LivenessBonusConfig::clear_bonus() {
  bonus_.Clear();
}
inline const ::DianShiTech::Config::ConfigTypeGroup& LivenessBonusConfig::bonus(int index) const {
  return bonus_.Get(index);
}
inline ::DianShiTech::Config::ConfigTypeGroup* LivenessBonusConfig::mutable_bonus(int index) {
  return bonus_.Mutable(index);
}
inline ::DianShiTech::Config::ConfigTypeGroup* LivenessBonusConfig::add_bonus() {
  return bonus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >&
LivenessBonusConfig::bonus() const {
  return bonus_;
}
inline ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >*
LivenessBonusConfig::mutable_bonus() {
  return &bonus_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LivenessBonusConfig_2eproto__INCLUDED
