// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CourseConfig.proto

#ifndef PROTOBUF_CourseConfig_2eproto__INCLUDED
#define PROTOBUF_CourseConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CourseConfig_2eproto();
void protobuf_AssignDesc_CourseConfig_2eproto();
void protobuf_ShutdownFile_CourseConfig_2eproto();

class CourseConfig;

// ===================================================================

class CourseConfig : public ::google::protobuf::Message {
 public:
  CourseConfig();
  virtual ~CourseConfig();

  CourseConfig(const CourseConfig& from);

  inline CourseConfig& operator=(const CourseConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CourseConfig& default_instance();

  void Swap(CourseConfig* other);

  // implements Message ----------------------------------------------

  CourseConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CourseConfig& from);
  void MergeFrom(const CourseConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 newsystem_jump = 18;
  inline bool has_newsystem_jump() const;
  inline void clear_newsystem_jump();
  static const int kNewsystemJumpFieldNumber = 18;
  inline ::google::protobuf::int32 newsystem_jump() const;
  inline void set_newsystem_jump(::google::protobuf::int32 value);

  // repeated int32 range_pos_offset = 9;
  inline int range_pos_offset_size() const;
  inline void clear_range_pos_offset();
  static const int kRangePosOffsetFieldNumber = 9;
  inline ::google::protobuf::int32 range_pos_offset(int index) const;
  inline void set_range_pos_offset(int index, ::google::protobuf::int32 value);
  inline void add_range_pos_offset(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      range_pos_offset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_range_pos_offset();

  // optional int32 is_weak = 3;
  inline bool has_is_weak() const;
  inline void clear_is_weak();
  static const int kIsWeakFieldNumber = 3;
  inline ::google::protobuf::int32 is_weak() const;
  inline void set_is_weak(::google::protobuf::int32 value);

  // optional int32 skip_ui_id = 4;
  inline bool has_skip_ui_id() const;
  inline void clear_skip_ui_id();
  static const int kSkipUiIdFieldNumber = 4;
  inline ::google::protobuf::int32 skip_ui_id() const;
  inline void set_skip_ui_id(::google::protobuf::int32 value);

  // optional string newsystem_title = 16;
  inline bool has_newsystem_title() const;
  inline void clear_newsystem_title();
  static const int kNewsystemTitleFieldNumber = 16;
  inline const ::std::string& newsystem_title() const;
  inline void set_newsystem_title(const ::std::string& value);
  inline void set_newsystem_title(const char* value);
  inline void set_newsystem_title(const char* value, size_t size);
  inline ::std::string* mutable_newsystem_title();
  inline ::std::string* release_newsystem_title();
  inline void set_allocated_newsystem_title(::std::string* newsystem_title);

  // optional string newsystem_text = 17;
  inline bool has_newsystem_text() const;
  inline void clear_newsystem_text();
  static const int kNewsystemTextFieldNumber = 17;
  inline const ::std::string& newsystem_text() const;
  inline void set_newsystem_text(const ::std::string& value);
  inline void set_newsystem_text(const char* value);
  inline void set_newsystem_text(const char* value, size_t size);
  inline ::std::string* mutable_newsystem_text();
  inline ::std::string* release_newsystem_text();
  inline void set_allocated_newsystem_text(::std::string* newsystem_text);

  // optional int32 global_range_id = 10;
  inline bool has_global_range_id() const;
  inline void clear_global_range_id();
  static const int kGlobalRangeIdFieldNumber = 10;
  inline ::google::protobuf::int32 global_range_id() const;
  inline void set_global_range_id(::google::protobuf::int32 value);

  // optional int32 newsystem_icon = 15;
  inline bool has_newsystem_icon() const;
  inline void clear_newsystem_icon();
  static const int kNewsystemIconFieldNumber = 15;
  inline ::google::protobuf::int32 newsystem_icon() const;
  inline void set_newsystem_icon(::google::protobuf::int32 value);

  // repeated int32 touch_size = 8;
  inline int touch_size_size() const;
  inline void clear_touch_size();
  static const int kTouchSizeFieldNumber = 8;
  inline ::google::protobuf::int32 touch_size(int index) const;
  inline void set_touch_size(int index, ::google::protobuf::int32 value);
  inline void add_touch_size(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      touch_size() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_touch_size();

  // optional int32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::int32 effect() const;
  inline void set_effect(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 range_type = 6;
  inline bool has_range_type() const;
  inline void clear_range_type();
  static const int kRangeTypeFieldNumber = 6;
  inline ::google::protobuf::int32 range_type() const;
  inline void set_range_type(::google::protobuf::int32 value);

  // repeated int32 ui_id = 2;
  inline int ui_id_size() const;
  inline void clear_ui_id();
  static const int kUiIdFieldNumber = 2;
  inline ::google::protobuf::int32 ui_id(int index) const;
  inline void set_ui_id(int index, ::google::protobuf::int32 value);
  inline void add_ui_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ui_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ui_id();

  // optional int32 frame_type = 14;
  inline bool has_frame_type() const;
  inline void clear_frame_type();
  static const int kFrameTypeFieldNumber = 14;
  inline ::google::protobuf::int32 frame_type() const;
  inline void set_frame_type(::google::protobuf::int32 value);

  // optional string desciption2 = 12;
  inline bool has_desciption2() const;
  inline void clear_desciption2();
  static const int kDesciption2FieldNumber = 12;
  inline const ::std::string& desciption2() const;
  inline void set_desciption2(const ::std::string& value);
  inline void set_desciption2(const char* value);
  inline void set_desciption2(const char* value, size_t size);
  inline ::std::string* mutable_desciption2();
  inline ::std::string* release_desciption2();
  inline void set_allocated_desciption2(::std::string* desciption2);

  // optional string desciption = 11;
  inline bool has_desciption() const;
  inline void clear_desciption();
  static const int kDesciptionFieldNumber = 11;
  inline const ::std::string& desciption() const;
  inline void set_desciption(const ::std::string& value);
  inline void set_desciption(const char* value);
  inline void set_desciption(const char* value, size_t size);
  inline ::std::string* mutable_desciption();
  inline ::std::string* release_desciption();
  inline void set_allocated_desciption(::std::string* desciption);

  // optional int32 component_id = 7;
  inline bool has_component_id() const;
  inline void clear_component_id();
  static const int kComponentIdFieldNumber = 7;
  inline ::google::protobuf::int32 component_id() const;
  inline void set_component_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.CourseConfig)
 private:
  inline void set_has_newsystem_jump();
  inline void clear_has_newsystem_jump();
  inline void set_has_is_weak();
  inline void clear_has_is_weak();
  inline void set_has_skip_ui_id();
  inline void clear_has_skip_ui_id();
  inline void set_has_newsystem_title();
  inline void clear_has_newsystem_title();
  inline void set_has_newsystem_text();
  inline void clear_has_newsystem_text();
  inline void set_has_global_range_id();
  inline void clear_has_global_range_id();
  inline void set_has_newsystem_icon();
  inline void clear_has_newsystem_icon();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_range_type();
  inline void clear_has_range_type();
  inline void set_has_frame_type();
  inline void clear_has_frame_type();
  inline void set_has_desciption2();
  inline void clear_has_desciption2();
  inline void set_has_desciption();
  inline void clear_has_desciption();
  inline void set_has_component_id();
  inline void clear_has_component_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > range_pos_offset_;
  ::google::protobuf::int32 newsystem_jump_;
  ::google::protobuf::int32 is_weak_;
  ::std::string* newsystem_title_;
  ::google::protobuf::int32 skip_ui_id_;
  ::google::protobuf::int32 global_range_id_;
  ::std::string* newsystem_text_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > touch_size_;
  ::google::protobuf::int32 newsystem_icon_;
  ::google::protobuf::int32 effect_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 range_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ui_id_;
  ::std::string* desciption2_;
  ::google::protobuf::int32 frame_type_;
  ::google::protobuf::int32 component_id_;
  ::std::string* desciption_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_CourseConfig_2eproto();
  friend void protobuf_AssignDesc_CourseConfig_2eproto();
  friend void protobuf_ShutdownFile_CourseConfig_2eproto();

  void InitAsDefaultInstance();
  static CourseConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// CourseConfig

// optional int32 newsystem_jump = 18;
inline bool CourseConfig::has_newsystem_jump() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CourseConfig::set_has_newsystem_jump() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CourseConfig::clear_has_newsystem_jump() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CourseConfig::clear_newsystem_jump() {
  newsystem_jump_ = 0;
  clear_has_newsystem_jump();
}
inline ::google::protobuf::int32 CourseConfig::newsystem_jump() const {
  return newsystem_jump_;
}
inline void CourseConfig::set_newsystem_jump(::google::protobuf::int32 value) {
  set_has_newsystem_jump();
  newsystem_jump_ = value;
}

// repeated int32 range_pos_offset = 9;
inline int CourseConfig::range_pos_offset_size() const {
  return range_pos_offset_.size();
}
inline void CourseConfig::clear_range_pos_offset() {
  range_pos_offset_.Clear();
}
inline ::google::protobuf::int32 CourseConfig::range_pos_offset(int index) const {
  return range_pos_offset_.Get(index);
}
inline void CourseConfig::set_range_pos_offset(int index, ::google::protobuf::int32 value) {
  range_pos_offset_.Set(index, value);
}
inline void CourseConfig::add_range_pos_offset(::google::protobuf::int32 value) {
  range_pos_offset_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CourseConfig::range_pos_offset() const {
  return range_pos_offset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CourseConfig::mutable_range_pos_offset() {
  return &range_pos_offset_;
}

// optional int32 is_weak = 3;
inline bool CourseConfig::has_is_weak() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CourseConfig::set_has_is_weak() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CourseConfig::clear_has_is_weak() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CourseConfig::clear_is_weak() {
  is_weak_ = 0;
  clear_has_is_weak();
}
inline ::google::protobuf::int32 CourseConfig::is_weak() const {
  return is_weak_;
}
inline void CourseConfig::set_is_weak(::google::protobuf::int32 value) {
  set_has_is_weak();
  is_weak_ = value;
}

// optional int32 skip_ui_id = 4;
inline bool CourseConfig::has_skip_ui_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CourseConfig::set_has_skip_ui_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CourseConfig::clear_has_skip_ui_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CourseConfig::clear_skip_ui_id() {
  skip_ui_id_ = 0;
  clear_has_skip_ui_id();
}
inline ::google::protobuf::int32 CourseConfig::skip_ui_id() const {
  return skip_ui_id_;
}
inline void CourseConfig::set_skip_ui_id(::google::protobuf::int32 value) {
  set_has_skip_ui_id();
  skip_ui_id_ = value;
}

// optional string newsystem_title = 16;
inline bool CourseConfig::has_newsystem_title() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CourseConfig::set_has_newsystem_title() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CourseConfig::clear_has_newsystem_title() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CourseConfig::clear_newsystem_title() {
  if (newsystem_title_ != &::google::protobuf::internal::kEmptyString) {
    newsystem_title_->clear();
  }
  clear_has_newsystem_title();
}
inline const ::std::string& CourseConfig::newsystem_title() const {
  return *newsystem_title_;
}
inline void CourseConfig::set_newsystem_title(const ::std::string& value) {
  set_has_newsystem_title();
  if (newsystem_title_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_title_ = new ::std::string;
  }
  newsystem_title_->assign(value);
}
inline void CourseConfig::set_newsystem_title(const char* value) {
  set_has_newsystem_title();
  if (newsystem_title_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_title_ = new ::std::string;
  }
  newsystem_title_->assign(value);
}
inline void CourseConfig::set_newsystem_title(const char* value, size_t size) {
  set_has_newsystem_title();
  if (newsystem_title_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_title_ = new ::std::string;
  }
  newsystem_title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CourseConfig::mutable_newsystem_title() {
  set_has_newsystem_title();
  if (newsystem_title_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_title_ = new ::std::string;
  }
  return newsystem_title_;
}
inline ::std::string* CourseConfig::release_newsystem_title() {
  clear_has_newsystem_title();
  if (newsystem_title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = newsystem_title_;
    newsystem_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CourseConfig::set_allocated_newsystem_title(::std::string* newsystem_title) {
  if (newsystem_title_ != &::google::protobuf::internal::kEmptyString) {
    delete newsystem_title_;
  }
  if (newsystem_title) {
    set_has_newsystem_title();
    newsystem_title_ = newsystem_title;
  } else {
    clear_has_newsystem_title();
    newsystem_title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string newsystem_text = 17;
inline bool CourseConfig::has_newsystem_text() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CourseConfig::set_has_newsystem_text() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CourseConfig::clear_has_newsystem_text() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CourseConfig::clear_newsystem_text() {
  if (newsystem_text_ != &::google::protobuf::internal::kEmptyString) {
    newsystem_text_->clear();
  }
  clear_has_newsystem_text();
}
inline const ::std::string& CourseConfig::newsystem_text() const {
  return *newsystem_text_;
}
inline void CourseConfig::set_newsystem_text(const ::std::string& value) {
  set_has_newsystem_text();
  if (newsystem_text_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_text_ = new ::std::string;
  }
  newsystem_text_->assign(value);
}
inline void CourseConfig::set_newsystem_text(const char* value) {
  set_has_newsystem_text();
  if (newsystem_text_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_text_ = new ::std::string;
  }
  newsystem_text_->assign(value);
}
inline void CourseConfig::set_newsystem_text(const char* value, size_t size) {
  set_has_newsystem_text();
  if (newsystem_text_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_text_ = new ::std::string;
  }
  newsystem_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CourseConfig::mutable_newsystem_text() {
  set_has_newsystem_text();
  if (newsystem_text_ == &::google::protobuf::internal::kEmptyString) {
    newsystem_text_ = new ::std::string;
  }
  return newsystem_text_;
}
inline ::std::string* CourseConfig::release_newsystem_text() {
  clear_has_newsystem_text();
  if (newsystem_text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = newsystem_text_;
    newsystem_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CourseConfig::set_allocated_newsystem_text(::std::string* newsystem_text) {
  if (newsystem_text_ != &::google::protobuf::internal::kEmptyString) {
    delete newsystem_text_;
  }
  if (newsystem_text) {
    set_has_newsystem_text();
    newsystem_text_ = newsystem_text;
  } else {
    clear_has_newsystem_text();
    newsystem_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 global_range_id = 10;
inline bool CourseConfig::has_global_range_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CourseConfig::set_has_global_range_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CourseConfig::clear_has_global_range_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CourseConfig::clear_global_range_id() {
  global_range_id_ = 0;
  clear_has_global_range_id();
}
inline ::google::protobuf::int32 CourseConfig::global_range_id() const {
  return global_range_id_;
}
inline void CourseConfig::set_global_range_id(::google::protobuf::int32 value) {
  set_has_global_range_id();
  global_range_id_ = value;
}

// optional int32 newsystem_icon = 15;
inline bool CourseConfig::has_newsystem_icon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CourseConfig::set_has_newsystem_icon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CourseConfig::clear_has_newsystem_icon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CourseConfig::clear_newsystem_icon() {
  newsystem_icon_ = 0;
  clear_has_newsystem_icon();
}
inline ::google::protobuf::int32 CourseConfig::newsystem_icon() const {
  return newsystem_icon_;
}
inline void CourseConfig::set_newsystem_icon(::google::protobuf::int32 value) {
  set_has_newsystem_icon();
  newsystem_icon_ = value;
}

// repeated int32 touch_size = 8;
inline int CourseConfig::touch_size_size() const {
  return touch_size_.size();
}
inline void CourseConfig::clear_touch_size() {
  touch_size_.Clear();
}
inline ::google::protobuf::int32 CourseConfig::touch_size(int index) const {
  return touch_size_.Get(index);
}
inline void CourseConfig::set_touch_size(int index, ::google::protobuf::int32 value) {
  touch_size_.Set(index, value);
}
inline void CourseConfig::add_touch_size(::google::protobuf::int32 value) {
  touch_size_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CourseConfig::touch_size() const {
  return touch_size_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CourseConfig::mutable_touch_size() {
  return &touch_size_;
}

// optional int32 effect = 5;
inline bool CourseConfig::has_effect() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CourseConfig::set_has_effect() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CourseConfig::clear_has_effect() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CourseConfig::clear_effect() {
  effect_ = 0;
  clear_has_effect();
}
inline ::google::protobuf::int32 CourseConfig::effect() const {
  return effect_;
}
inline void CourseConfig::set_effect(::google::protobuf::int32 value) {
  set_has_effect();
  effect_ = value;
}

// optional int32 id = 1;
inline bool CourseConfig::has_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CourseConfig::set_has_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CourseConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CourseConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CourseConfig::id() const {
  return id_;
}
inline void CourseConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 range_type = 6;
inline bool CourseConfig::has_range_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CourseConfig::set_has_range_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CourseConfig::clear_has_range_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CourseConfig::clear_range_type() {
  range_type_ = 0;
  clear_has_range_type();
}
inline ::google::protobuf::int32 CourseConfig::range_type() const {
  return range_type_;
}
inline void CourseConfig::set_range_type(::google::protobuf::int32 value) {
  set_has_range_type();
  range_type_ = value;
}

// repeated int32 ui_id = 2;
inline int CourseConfig::ui_id_size() const {
  return ui_id_.size();
}
inline void CourseConfig::clear_ui_id() {
  ui_id_.Clear();
}
inline ::google::protobuf::int32 CourseConfig::ui_id(int index) const {
  return ui_id_.Get(index);
}
inline void CourseConfig::set_ui_id(int index, ::google::protobuf::int32 value) {
  ui_id_.Set(index, value);
}
inline void CourseConfig::add_ui_id(::google::protobuf::int32 value) {
  ui_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CourseConfig::ui_id() const {
  return ui_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CourseConfig::mutable_ui_id() {
  return &ui_id_;
}

// optional int32 frame_type = 14;
inline bool CourseConfig::has_frame_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CourseConfig::set_has_frame_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CourseConfig::clear_has_frame_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CourseConfig::clear_frame_type() {
  frame_type_ = 0;
  clear_has_frame_type();
}
inline ::google::protobuf::int32 CourseConfig::frame_type() const {
  return frame_type_;
}
inline void CourseConfig::set_frame_type(::google::protobuf::int32 value) {
  set_has_frame_type();
  frame_type_ = value;
}

// optional string desciption2 = 12;
inline bool CourseConfig::has_desciption2() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CourseConfig::set_has_desciption2() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CourseConfig::clear_has_desciption2() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CourseConfig::clear_desciption2() {
  if (desciption2_ != &::google::protobuf::internal::kEmptyString) {
    desciption2_->clear();
  }
  clear_has_desciption2();
}
inline const ::std::string& CourseConfig::desciption2() const {
  return *desciption2_;
}
inline void CourseConfig::set_desciption2(const ::std::string& value) {
  set_has_desciption2();
  if (desciption2_ == &::google::protobuf::internal::kEmptyString) {
    desciption2_ = new ::std::string;
  }
  desciption2_->assign(value);
}
inline void CourseConfig::set_desciption2(const char* value) {
  set_has_desciption2();
  if (desciption2_ == &::google::protobuf::internal::kEmptyString) {
    desciption2_ = new ::std::string;
  }
  desciption2_->assign(value);
}
inline void CourseConfig::set_desciption2(const char* value, size_t size) {
  set_has_desciption2();
  if (desciption2_ == &::google::protobuf::internal::kEmptyString) {
    desciption2_ = new ::std::string;
  }
  desciption2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CourseConfig::mutable_desciption2() {
  set_has_desciption2();
  if (desciption2_ == &::google::protobuf::internal::kEmptyString) {
    desciption2_ = new ::std::string;
  }
  return desciption2_;
}
inline ::std::string* CourseConfig::release_desciption2() {
  clear_has_desciption2();
  if (desciption2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desciption2_;
    desciption2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CourseConfig::set_allocated_desciption2(::std::string* desciption2) {
  if (desciption2_ != &::google::protobuf::internal::kEmptyString) {
    delete desciption2_;
  }
  if (desciption2) {
    set_has_desciption2();
    desciption2_ = desciption2;
  } else {
    clear_has_desciption2();
    desciption2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string desciption = 11;
inline bool CourseConfig::has_desciption() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CourseConfig::set_has_desciption() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CourseConfig::clear_has_desciption() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CourseConfig::clear_desciption() {
  if (desciption_ != &::google::protobuf::internal::kEmptyString) {
    desciption_->clear();
  }
  clear_has_desciption();
}
inline const ::std::string& CourseConfig::desciption() const {
  return *desciption_;
}
inline void CourseConfig::set_desciption(const ::std::string& value) {
  set_has_desciption();
  if (desciption_ == &::google::protobuf::internal::kEmptyString) {
    desciption_ = new ::std::string;
  }
  desciption_->assign(value);
}
inline void CourseConfig::set_desciption(const char* value) {
  set_has_desciption();
  if (desciption_ == &::google::protobuf::internal::kEmptyString) {
    desciption_ = new ::std::string;
  }
  desciption_->assign(value);
}
inline void CourseConfig::set_desciption(const char* value, size_t size) {
  set_has_desciption();
  if (desciption_ == &::google::protobuf::internal::kEmptyString) {
    desciption_ = new ::std::string;
  }
  desciption_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CourseConfig::mutable_desciption() {
  set_has_desciption();
  if (desciption_ == &::google::protobuf::internal::kEmptyString) {
    desciption_ = new ::std::string;
  }
  return desciption_;
}
inline ::std::string* CourseConfig::release_desciption() {
  clear_has_desciption();
  if (desciption_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desciption_;
    desciption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CourseConfig::set_allocated_desciption(::std::string* desciption) {
  if (desciption_ != &::google::protobuf::internal::kEmptyString) {
    delete desciption_;
  }
  if (desciption) {
    set_has_desciption();
    desciption_ = desciption;
  } else {
    clear_has_desciption();
    desciption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 component_id = 7;
inline bool CourseConfig::has_component_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CourseConfig::set_has_component_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CourseConfig::clear_has_component_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CourseConfig::clear_component_id() {
  component_id_ = 0;
  clear_has_component_id();
}
inline ::google::protobuf::int32 CourseConfig::component_id() const {
  return component_id_;
}
inline void CourseConfig::set_component_id(::google::protobuf::int32 value) {
  set_has_component_id();
  component_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CourseConfig_2eproto__INCLUDED
