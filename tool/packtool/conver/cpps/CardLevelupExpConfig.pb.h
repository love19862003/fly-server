// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CardLevelupExpConfig.proto

#ifndef PROTOBUF_CardLevelupExpConfig_2eproto__INCLUDED
#define PROTOBUF_CardLevelupExpConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CardLevelupExpConfig_2eproto();
void protobuf_AssignDesc_CardLevelupExpConfig_2eproto();
void protobuf_ShutdownFile_CardLevelupExpConfig_2eproto();

class CardLevelupExpConfig;

// ===================================================================

class CardLevelupExpConfig : public ::google::protobuf::Message {
 public:
  CardLevelupExpConfig();
  virtual ~CardLevelupExpConfig();

  CardLevelupExpConfig(const CardLevelupExpConfig& from);

  inline CardLevelupExpConfig& operator=(const CardLevelupExpConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardLevelupExpConfig& default_instance();

  void Swap(CardLevelupExpConfig* other);

  // implements Message ----------------------------------------------

  CardLevelupExpConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardLevelupExpConfig& from);
  void MergeFrom(const CardLevelupExpConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_exp = 5;
  inline bool has_total_exp() const;
  inline void clear_total_exp();
  static const int kTotalExpFieldNumber = 5;
  inline ::google::protobuf::int32 total_exp() const;
  inline void set_total_exp(::google::protobuf::int32 value);

  // optional int32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 card_max_rank = 3;
  inline bool has_card_max_rank() const;
  inline void clear_card_max_rank();
  static const int kCardMaxRankFieldNumber = 3;
  inline ::google::protobuf::int32 card_max_rank() const;
  inline void set_card_max_rank(::google::protobuf::int32 value);

  // repeated int32 drop = 6;
  inline int drop_size() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 6;
  inline ::google::protobuf::int32 drop(int index) const;
  inline void set_drop(int index, ::google::protobuf::int32 value);
  inline void add_drop(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      drop() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_drop();

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.CardLevelupExpConfig)
 private:
  inline void set_has_total_exp();
  inline void clear_has_total_exp();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_card_max_rank();
  inline void clear_has_card_max_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 total_exp_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > drop_;
  ::google::protobuf::int32 card_max_rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CardLevelupExpConfig_2eproto();
  friend void protobuf_AssignDesc_CardLevelupExpConfig_2eproto();
  friend void protobuf_ShutdownFile_CardLevelupExpConfig_2eproto();

  void InitAsDefaultInstance();
  static CardLevelupExpConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// CardLevelupExpConfig

// optional int32 total_exp = 5;
inline bool CardLevelupExpConfig::has_total_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardLevelupExpConfig::set_has_total_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardLevelupExpConfig::clear_has_total_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardLevelupExpConfig::clear_total_exp() {
  total_exp_ = 0;
  clear_has_total_exp();
}
inline ::google::protobuf::int32 CardLevelupExpConfig::total_exp() const {
  return total_exp_;
}
inline void CardLevelupExpConfig::set_total_exp(::google::protobuf::int32 value) {
  set_has_total_exp();
  total_exp_ = value;
}

// optional int32 exp = 4;
inline bool CardLevelupExpConfig::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardLevelupExpConfig::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardLevelupExpConfig::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardLevelupExpConfig::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 CardLevelupExpConfig::exp() const {
  return exp_;
}
inline void CardLevelupExpConfig::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 id = 1;
inline bool CardLevelupExpConfig::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardLevelupExpConfig::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardLevelupExpConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardLevelupExpConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CardLevelupExpConfig::id() const {
  return id_;
}
inline void CardLevelupExpConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 level = 2;
inline bool CardLevelupExpConfig::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardLevelupExpConfig::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardLevelupExpConfig::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardLevelupExpConfig::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 CardLevelupExpConfig::level() const {
  return level_;
}
inline void CardLevelupExpConfig::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 card_max_rank = 3;
inline bool CardLevelupExpConfig::has_card_max_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CardLevelupExpConfig::set_has_card_max_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CardLevelupExpConfig::clear_has_card_max_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CardLevelupExpConfig::clear_card_max_rank() {
  card_max_rank_ = 0;
  clear_has_card_max_rank();
}
inline ::google::protobuf::int32 CardLevelupExpConfig::card_max_rank() const {
  return card_max_rank_;
}
inline void CardLevelupExpConfig::set_card_max_rank(::google::protobuf::int32 value) {
  set_has_card_max_rank();
  card_max_rank_ = value;
}

// repeated int32 drop = 6;
inline int CardLevelupExpConfig::drop_size() const {
  return drop_.size();
}
inline void CardLevelupExpConfig::clear_drop() {
  drop_.Clear();
}
inline ::google::protobuf::int32 CardLevelupExpConfig::drop(int index) const {
  return drop_.Get(index);
}
inline void CardLevelupExpConfig::set_drop(int index, ::google::protobuf::int32 value) {
  drop_.Set(index, value);
}
inline void CardLevelupExpConfig::add_drop(::google::protobuf::int32 value) {
  drop_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CardLevelupExpConfig::drop() const {
  return drop_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CardLevelupExpConfig::mutable_drop() {
  return &drop_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CardLevelupExpConfig_2eproto__INCLUDED
