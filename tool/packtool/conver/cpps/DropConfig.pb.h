// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DropConfig.proto

#ifndef PROTOBUF_DropConfig_2eproto__INCLUDED
#define PROTOBUF_DropConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DropConfig_2eproto();
void protobuf_AssignDesc_DropConfig_2eproto();
void protobuf_ShutdownFile_DropConfig_2eproto();

class DropConfig;

enum DropConfig_DROP_TYPE {
  DropConfig_DROP_TYPE_CARDDROPTYPE = 8,
  DropConfig_DROP_TYPE_VITALITYDROPTYPE = 11,
  DropConfig_DROP_TYPE_VIPDROPTYPE = 13,
  DropConfig_DROP_TYPE_TALENTCDTIMEDROPTYPE = 22,
  DropConfig_DROP_TYPE_JIANGHUNDROPTYPE = 20,
  DropConfig_DROP_TYPE_ACHIEVEMENTPOINTDROPTYPE = 10,
  DropConfig_DROP_TYPE_ITEMDROPTYPE = 6,
  DropConfig_DROP_TYPE_COINDROPTYPE = 4,
  DropConfig_DROP_TYPE_LOYALTYDROPTYPE = 9,
  DropConfig_DROP_TYPE_VIPEXPDROPTYPE = 24,
  DropConfig_DROP_TYPE_CARDEXPDROPTYPE = 2,
  DropConfig_DROP_TYPE_PLAYEREXPDROPTYPE = 1,
  DropConfig_DROP_TYPE_TALENTPOINTDROPTYPE = 21,
  DropConfig_DROP_TYPE_PVPPROTECTTIMEDROPTYPE = 18,
  DropConfig_DROP_TYPE_SKILLDROPTYPE = 3,
  DropConfig_DROP_TYPE_MONEYDROPTYPE = 5,
  DropConfig_DROP_TYPE_DRAGONCOMMANDDROPTYPE = 12,
  DropConfig_DROP_TYPE_EQUIPMENTDROPTYPE = 7
};
bool DropConfig_DROP_TYPE_IsValid(int value);
const DropConfig_DROP_TYPE DropConfig_DROP_TYPE_DROP_TYPE_MIN = DropConfig_DROP_TYPE_PLAYEREXPDROPTYPE;
const DropConfig_DROP_TYPE DropConfig_DROP_TYPE_DROP_TYPE_MAX = DropConfig_DROP_TYPE_VIPEXPDROPTYPE;
const int DropConfig_DROP_TYPE_DROP_TYPE_ARRAYSIZE = DropConfig_DROP_TYPE_DROP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DropConfig_DROP_TYPE_descriptor();
inline const ::std::string& DropConfig_DROP_TYPE_Name(DropConfig_DROP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DropConfig_DROP_TYPE_descriptor(), value);
}
inline bool DropConfig_DROP_TYPE_Parse(
    const ::std::string& name, DropConfig_DROP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DropConfig_DROP_TYPE>(
    DropConfig_DROP_TYPE_descriptor(), name, value);
}
// ===================================================================

class DropConfig : public ::google::protobuf::Message {
 public:
  DropConfig();
  virtual ~DropConfig();

  DropConfig(const DropConfig& from);

  inline DropConfig& operator=(const DropConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropConfig& default_instance();

  void Swap(DropConfig* other);

  // implements Message ----------------------------------------------

  DropConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropConfig& from);
  void MergeFrom(const DropConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DropConfig_DROP_TYPE DROP_TYPE;
  static const DROP_TYPE CARDDROPTYPE = DropConfig_DROP_TYPE_CARDDROPTYPE;
  static const DROP_TYPE VITALITYDROPTYPE = DropConfig_DROP_TYPE_VITALITYDROPTYPE;
  static const DROP_TYPE VIPDROPTYPE = DropConfig_DROP_TYPE_VIPDROPTYPE;
  static const DROP_TYPE TALENTCDTIMEDROPTYPE = DropConfig_DROP_TYPE_TALENTCDTIMEDROPTYPE;
  static const DROP_TYPE JIANGHUNDROPTYPE = DropConfig_DROP_TYPE_JIANGHUNDROPTYPE;
  static const DROP_TYPE ACHIEVEMENTPOINTDROPTYPE = DropConfig_DROP_TYPE_ACHIEVEMENTPOINTDROPTYPE;
  static const DROP_TYPE ITEMDROPTYPE = DropConfig_DROP_TYPE_ITEMDROPTYPE;
  static const DROP_TYPE COINDROPTYPE = DropConfig_DROP_TYPE_COINDROPTYPE;
  static const DROP_TYPE LOYALTYDROPTYPE = DropConfig_DROP_TYPE_LOYALTYDROPTYPE;
  static const DROP_TYPE VIPEXPDROPTYPE = DropConfig_DROP_TYPE_VIPEXPDROPTYPE;
  static const DROP_TYPE CARDEXPDROPTYPE = DropConfig_DROP_TYPE_CARDEXPDROPTYPE;
  static const DROP_TYPE PLAYEREXPDROPTYPE = DropConfig_DROP_TYPE_PLAYEREXPDROPTYPE;
  static const DROP_TYPE TALENTPOINTDROPTYPE = DropConfig_DROP_TYPE_TALENTPOINTDROPTYPE;
  static const DROP_TYPE PVPPROTECTTIMEDROPTYPE = DropConfig_DROP_TYPE_PVPPROTECTTIMEDROPTYPE;
  static const DROP_TYPE SKILLDROPTYPE = DropConfig_DROP_TYPE_SKILLDROPTYPE;
  static const DROP_TYPE MONEYDROPTYPE = DropConfig_DROP_TYPE_MONEYDROPTYPE;
  static const DROP_TYPE DRAGONCOMMANDDROPTYPE = DropConfig_DROP_TYPE_DRAGONCOMMANDDROPTYPE;
  static const DROP_TYPE EQUIPMENTDROPTYPE = DropConfig_DROP_TYPE_EQUIPMENTDROPTYPE;
  static inline bool DROP_TYPE_IsValid(int value) {
    return DropConfig_DROP_TYPE_IsValid(value);
  }
  static const DROP_TYPE DROP_TYPE_MIN =
    DropConfig_DROP_TYPE_DROP_TYPE_MIN;
  static const DROP_TYPE DROP_TYPE_MAX =
    DropConfig_DROP_TYPE_DROP_TYPE_MAX;
  static const int DROP_TYPE_ARRAYSIZE =
    DropConfig_DROP_TYPE_DROP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DROP_TYPE_descriptor() {
    return DropConfig_DROP_TYPE_descriptor();
  }
  static inline const ::std::string& DROP_TYPE_Name(DROP_TYPE value) {
    return DropConfig_DROP_TYPE_Name(value);
  }
  static inline bool DROP_TYPE_Parse(const ::std::string& name,
      DROP_TYPE* value) {
    return DropConfig_DROP_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 max_level = 4;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 4;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // repeated .DianShiTech.Config.ConfigTypeGroup drop_data = 7;
  inline int drop_data_size() const;
  inline void clear_drop_data();
  static const int kDropDataFieldNumber = 7;
  inline const ::DianShiTech::Config::ConfigTypeGroup& drop_data(int index) const;
  inline ::DianShiTech::Config::ConfigTypeGroup* mutable_drop_data(int index);
  inline ::DianShiTech::Config::ConfigTypeGroup* add_drop_data();
  inline const ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >&
      drop_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >*
      mutable_drop_data();

  // optional int32 drop_count = 6;
  inline bool has_drop_count() const;
  inline void clear_drop_count();
  static const int kDropCountFieldNumber = 6;
  inline ::google::protobuf::int32 drop_count() const;
  inline void set_drop_count(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 min_level = 3;
  inline bool has_min_level() const;
  inline void clear_min_level();
  static const int kMinLevelFieldNumber = 3;
  inline ::google::protobuf::int32 min_level() const;
  inline void set_min_level(::google::protobuf::int32 value);

  // optional int32 rate = 5;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 5;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 drop_type = 2;
  inline bool has_drop_type() const;
  inline void clear_drop_type();
  static const int kDropTypeFieldNumber = 2;
  inline ::google::protobuf::int32 drop_type() const;
  inline void set_drop_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.DropConfig)
 private:
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_drop_count();
  inline void clear_has_drop_count();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_min_level();
  inline void clear_has_min_level();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_drop_type();
  inline void clear_has_drop_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup > drop_data_;
  ::google::protobuf::int32 max_level_;
  ::google::protobuf::int32 drop_count_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 min_level_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 drop_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_DropConfig_2eproto();
  friend void protobuf_AssignDesc_DropConfig_2eproto();
  friend void protobuf_ShutdownFile_DropConfig_2eproto();

  void InitAsDefaultInstance();
  static DropConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// DropConfig

// optional int32 max_level = 4;
inline bool DropConfig::has_max_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropConfig::set_has_max_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropConfig::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropConfig::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 DropConfig::max_level() const {
  return max_level_;
}
inline void DropConfig::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
}

// repeated .DianShiTech.Config.ConfigTypeGroup drop_data = 7;
inline int DropConfig::drop_data_size() const {
  return drop_data_.size();
}
inline void DropConfig::clear_drop_data() {
  drop_data_.Clear();
}
inline const ::DianShiTech::Config::ConfigTypeGroup& DropConfig::drop_data(int index) const {
  return drop_data_.Get(index);
}
inline ::DianShiTech::Config::ConfigTypeGroup* DropConfig::mutable_drop_data(int index) {
  return drop_data_.Mutable(index);
}
inline ::DianShiTech::Config::ConfigTypeGroup* DropConfig::add_drop_data() {
  return drop_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >&
DropConfig::drop_data() const {
  return drop_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >*
DropConfig::mutable_drop_data() {
  return &drop_data_;
}

// optional int32 drop_count = 6;
inline bool DropConfig::has_drop_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DropConfig::set_has_drop_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DropConfig::clear_has_drop_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DropConfig::clear_drop_count() {
  drop_count_ = 0;
  clear_has_drop_count();
}
inline ::google::protobuf::int32 DropConfig::drop_count() const {
  return drop_count_;
}
inline void DropConfig::set_drop_count(::google::protobuf::int32 value) {
  set_has_drop_count();
  drop_count_ = value;
}

// optional int32 id = 1;
inline bool DropConfig::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DropConfig::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DropConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DropConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DropConfig::id() const {
  return id_;
}
inline void DropConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 min_level = 3;
inline bool DropConfig::has_min_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DropConfig::set_has_min_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DropConfig::clear_has_min_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DropConfig::clear_min_level() {
  min_level_ = 0;
  clear_has_min_level();
}
inline ::google::protobuf::int32 DropConfig::min_level() const {
  return min_level_;
}
inline void DropConfig::set_min_level(::google::protobuf::int32 value) {
  set_has_min_level();
  min_level_ = value;
}

// optional int32 rate = 5;
inline bool DropConfig::has_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DropConfig::set_has_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DropConfig::clear_has_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DropConfig::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 DropConfig::rate() const {
  return rate_;
}
inline void DropConfig::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 drop_type = 2;
inline bool DropConfig::has_drop_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DropConfig::set_has_drop_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DropConfig::clear_has_drop_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DropConfig::clear_drop_type() {
  drop_type_ = 0;
  clear_has_drop_type();
}
inline ::google::protobuf::int32 DropConfig::drop_type() const {
  return drop_type_;
}
inline void DropConfig::set_drop_type(::google::protobuf::int32 value) {
  set_has_drop_type();
  drop_type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DianShiTech::Config::DropConfig_DROP_TYPE>() {
  return ::DianShiTech::Config::DropConfig_DROP_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DropConfig_2eproto__INCLUDED
