// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Activity_RebateConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Activity_RebateConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

namespace {

const ::google::protobuf::Descriptor* Activity_RebateConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Activity_RebateConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Activity_5fRebateConfig_2eproto() {
  protobuf_AddDesc_Activity_5fRebateConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Activity_RebateConfig.proto");
  GOOGLE_CHECK(file != NULL);
  Activity_RebateConfig_descriptor_ = file->message_type(0);
  static const int Activity_RebateConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, rebate_once_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, rebate_once_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, rebate_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, rebate_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, rebate_count_),
  };
  Activity_RebateConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Activity_RebateConfig_descriptor_,
      Activity_RebateConfig::default_instance_,
      Activity_RebateConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Activity_RebateConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Activity_RebateConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Activity_5fRebateConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Activity_RebateConfig_descriptor_, &Activity_RebateConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Activity_5fRebateConfig_2eproto() {
  delete Activity_RebateConfig::default_instance_;
  delete Activity_RebateConfig_reflection_;
}

void protobuf_AddDesc_Activity_5fRebateConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DianShiTech::Config::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033Activity_RebateConfig.proto\022\022DianShiTe"
    "ch.Config\032\025ConfigTypeGroup.proto\"\350\001\n\025Act"
    "ivity_RebateConfig\022\030\n\020rebate_once_time\030\003"
    " \001(\005\022\020\n\010end_time\030\006 \001(\005\022\031\n\021rebate_once_co"
    "unt\030\007 \001(\005\0229\n\014rebate_money\030\010 \003(\0132#.DianSh"
    "iTech.Config.ConfigTypeGroup\022\n\n\002id\030\001 \001(\005"
    "\022\027\n\017rebate_end_time\030\004 \001(\005\022\022\n\nstart_time\030"
    "\005 \001(\005\022\024\n\014rebate_count\030\002 \001(\005", 307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Activity_RebateConfig.proto", &protobuf_RegisterTypes);
  Activity_RebateConfig::default_instance_ = new Activity_RebateConfig();
  Activity_RebateConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Activity_5fRebateConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Activity_5fRebateConfig_2eproto {
  StaticDescriptorInitializer_Activity_5fRebateConfig_2eproto() {
    protobuf_AddDesc_Activity_5fRebateConfig_2eproto();
  }
} static_descriptor_initializer_Activity_5fRebateConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Activity_RebateConfig::kRebateOnceTimeFieldNumber;
const int Activity_RebateConfig::kEndTimeFieldNumber;
const int Activity_RebateConfig::kRebateOnceCountFieldNumber;
const int Activity_RebateConfig::kRebateMoneyFieldNumber;
const int Activity_RebateConfig::kIdFieldNumber;
const int Activity_RebateConfig::kRebateEndTimeFieldNumber;
const int Activity_RebateConfig::kStartTimeFieldNumber;
const int Activity_RebateConfig::kRebateCountFieldNumber;
#endif  // !_MSC_VER

Activity_RebateConfig::Activity_RebateConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Activity_RebateConfig::InitAsDefaultInstance() {
}

Activity_RebateConfig::Activity_RebateConfig(const Activity_RebateConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Activity_RebateConfig::SharedCtor() {
  _cached_size_ = 0;
  rebate_once_time_ = 0;
  end_time_ = 0;
  rebate_once_count_ = 0;
  id_ = 0;
  rebate_end_time_ = 0;
  start_time_ = 0;
  rebate_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Activity_RebateConfig::~Activity_RebateConfig() {
  SharedDtor();
}

void Activity_RebateConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Activity_RebateConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Activity_RebateConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Activity_RebateConfig_descriptor_;
}

const Activity_RebateConfig& Activity_RebateConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Activity_5fRebateConfig_2eproto();
  return *default_instance_;
}

Activity_RebateConfig* Activity_RebateConfig::default_instance_ = NULL;

Activity_RebateConfig* Activity_RebateConfig::New() const {
  return new Activity_RebateConfig;
}

void Activity_RebateConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rebate_once_time_ = 0;
    end_time_ = 0;
    rebate_once_count_ = 0;
    id_ = 0;
    rebate_end_time_ = 0;
    start_time_ = 0;
    rebate_count_ = 0;
  }
  rebate_money_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Activity_RebateConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rebate_count;
        break;
      }

      // optional int32 rebate_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rebate_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebate_count_)));
          set_has_rebate_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rebate_once_time;
        break;
      }

      // optional int32 rebate_once_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rebate_once_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebate_once_time_)));
          set_has_rebate_once_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_rebate_end_time;
        break;
      }

      // optional int32 rebate_end_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rebate_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebate_end_time_)));
          set_has_rebate_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_start_time;
        break;
      }

      // optional int32 start_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_end_time;
        break;
      }

      // optional int32 end_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_rebate_once_count;
        break;
      }

      // optional int32 rebate_once_count = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rebate_once_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebate_once_count_)));
          set_has_rebate_once_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_rebate_money;
        break;
      }

      // repeated .DianShiTech.Config.ConfigTypeGroup rebate_money = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rebate_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rebate_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_rebate_money;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Activity_RebateConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 rebate_count = 2;
  if (has_rebate_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rebate_count(), output);
  }

  // optional int32 rebate_once_time = 3;
  if (has_rebate_once_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rebate_once_time(), output);
  }

  // optional int32 rebate_end_time = 4;
  if (has_rebate_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rebate_end_time(), output);
  }

  // optional int32 start_time = 5;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->start_time(), output);
  }

  // optional int32 end_time = 6;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->end_time(), output);
  }

  // optional int32 rebate_once_count = 7;
  if (has_rebate_once_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->rebate_once_count(), output);
  }

  // repeated .DianShiTech.Config.ConfigTypeGroup rebate_money = 8;
  for (int i = 0; i < this->rebate_money_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->rebate_money(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Activity_RebateConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 rebate_count = 2;
  if (has_rebate_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rebate_count(), target);
  }

  // optional int32 rebate_once_time = 3;
  if (has_rebate_once_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rebate_once_time(), target);
  }

  // optional int32 rebate_end_time = 4;
  if (has_rebate_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rebate_end_time(), target);
  }

  // optional int32 start_time = 5;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->start_time(), target);
  }

  // optional int32 end_time = 6;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->end_time(), target);
  }

  // optional int32 rebate_once_count = 7;
  if (has_rebate_once_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->rebate_once_count(), target);
  }

  // repeated .DianShiTech.Config.ConfigTypeGroup rebate_money = 8;
  for (int i = 0; i < this->rebate_money_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->rebate_money(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Activity_RebateConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rebate_once_time = 3;
    if (has_rebate_once_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rebate_once_time());
    }

    // optional int32 end_time = 6;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_time());
    }

    // optional int32 rebate_once_count = 7;
    if (has_rebate_once_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rebate_once_count());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 rebate_end_time = 4;
    if (has_rebate_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rebate_end_time());
    }

    // optional int32 start_time = 5;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_time());
    }

    // optional int32 rebate_count = 2;
    if (has_rebate_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rebate_count());
    }

  }
  // repeated .DianShiTech.Config.ConfigTypeGroup rebate_money = 8;
  total_size += 1 * this->rebate_money_size();
  for (int i = 0; i < this->rebate_money_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rebate_money(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Activity_RebateConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Activity_RebateConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Activity_RebateConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Activity_RebateConfig::MergeFrom(const Activity_RebateConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  rebate_money_.MergeFrom(from.rebate_money_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rebate_once_time()) {
      set_rebate_once_time(from.rebate_once_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_rebate_once_count()) {
      set_rebate_once_count(from.rebate_once_count());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_rebate_end_time()) {
      set_rebate_end_time(from.rebate_end_time());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_rebate_count()) {
      set_rebate_count(from.rebate_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Activity_RebateConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Activity_RebateConfig::CopyFrom(const Activity_RebateConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Activity_RebateConfig::IsInitialized() const {

  return true;
}

void Activity_RebateConfig::Swap(Activity_RebateConfig* other) {
  if (other != this) {
    std::swap(rebate_once_time_, other->rebate_once_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(rebate_once_count_, other->rebate_once_count_);
    rebate_money_.Swap(&other->rebate_money_);
    std::swap(id_, other->id_);
    std::swap(rebate_end_time_, other->rebate_end_time_);
    std::swap(start_time_, other->start_time_);
    std::swap(rebate_count_, other->rebate_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Activity_RebateConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Activity_RebateConfig_descriptor_;
  metadata.reflection = Activity_RebateConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

// @@protoc_insertion_point(global_scope)
