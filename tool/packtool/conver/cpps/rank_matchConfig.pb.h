// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rank_matchConfig.proto

#ifndef PROTOBUF_rank_5fmatchConfig_2eproto__INCLUDED
#define PROTOBUF_rank_5fmatchConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rank_5fmatchConfig_2eproto();
void protobuf_AssignDesc_rank_5fmatchConfig_2eproto();
void protobuf_ShutdownFile_rank_5fmatchConfig_2eproto();

class rank_matchConfig;

// ===================================================================

class rank_matchConfig : public ::google::protobuf::Message {
 public:
  rank_matchConfig();
  virtual ~rank_matchConfig();

  rank_matchConfig(const rank_matchConfig& from);

  inline rank_matchConfig& operator=(const rank_matchConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rank_matchConfig& default_instance();

  void Swap(rank_matchConfig* other);

  // implements Message ----------------------------------------------

  rank_matchConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rank_matchConfig& from);
  void MergeFrom(const rank_matchConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fight_cd = 3;
  inline bool has_fight_cd() const;
  inline void clear_fight_cd();
  static const int kFightCdFieldNumber = 3;
  inline ::google::protobuf::int32 fight_cd() const;
  inline void set_fight_cd(::google::protobuf::int32 value);

  // optional int32 buy_count_cost = 5;
  inline bool has_buy_count_cost() const;
  inline void clear_buy_count_cost();
  static const int kBuyCountCostFieldNumber = 5;
  inline ::google::protobuf::int32 buy_count_cost() const;
  inline void set_buy_count_cost(::google::protobuf::int32 value);

  // optional int32 clear_cd_cost = 6;
  inline bool has_clear_cd_cost() const;
  inline void clear_clear_cd_cost();
  static const int kClearCdCostFieldNumber = 6;
  inline ::google::protobuf::int32 clear_cd_cost() const;
  inline void set_clear_cd_cost(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 calculate_time = 4;
  inline bool has_calculate_time() const;
  inline void clear_calculate_time();
  static const int kCalculateTimeFieldNumber = 4;
  inline ::google::protobuf::int32 calculate_time() const;
  inline void set_calculate_time(::google::protobuf::int32 value);

  // optional int32 vip_daily_count = 2;
  inline bool has_vip_daily_count() const;
  inline void clear_vip_daily_count();
  static const int kVipDailyCountFieldNumber = 2;
  inline ::google::protobuf::int32 vip_daily_count() const;
  inline void set_vip_daily_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.rank_matchConfig)
 private:
  inline void set_has_fight_cd();
  inline void clear_has_fight_cd();
  inline void set_has_buy_count_cost();
  inline void clear_has_buy_count_cost();
  inline void set_has_clear_cd_cost();
  inline void clear_has_clear_cd_cost();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_calculate_time();
  inline void clear_has_calculate_time();
  inline void set_has_vip_daily_count();
  inline void clear_has_vip_daily_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fight_cd_;
  ::google::protobuf::int32 buy_count_cost_;
  ::google::protobuf::int32 clear_cd_cost_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 calculate_time_;
  ::google::protobuf::int32 vip_daily_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_rank_5fmatchConfig_2eproto();
  friend void protobuf_AssignDesc_rank_5fmatchConfig_2eproto();
  friend void protobuf_ShutdownFile_rank_5fmatchConfig_2eproto();

  void InitAsDefaultInstance();
  static rank_matchConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// rank_matchConfig

// optional int32 fight_cd = 3;
inline bool rank_matchConfig::has_fight_cd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rank_matchConfig::set_has_fight_cd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rank_matchConfig::clear_has_fight_cd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rank_matchConfig::clear_fight_cd() {
  fight_cd_ = 0;
  clear_has_fight_cd();
}
inline ::google::protobuf::int32 rank_matchConfig::fight_cd() const {
  return fight_cd_;
}
inline void rank_matchConfig::set_fight_cd(::google::protobuf::int32 value) {
  set_has_fight_cd();
  fight_cd_ = value;
}

// optional int32 buy_count_cost = 5;
inline bool rank_matchConfig::has_buy_count_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rank_matchConfig::set_has_buy_count_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rank_matchConfig::clear_has_buy_count_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rank_matchConfig::clear_buy_count_cost() {
  buy_count_cost_ = 0;
  clear_has_buy_count_cost();
}
inline ::google::protobuf::int32 rank_matchConfig::buy_count_cost() const {
  return buy_count_cost_;
}
inline void rank_matchConfig::set_buy_count_cost(::google::protobuf::int32 value) {
  set_has_buy_count_cost();
  buy_count_cost_ = value;
}

// optional int32 clear_cd_cost = 6;
inline bool rank_matchConfig::has_clear_cd_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void rank_matchConfig::set_has_clear_cd_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void rank_matchConfig::clear_has_clear_cd_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void rank_matchConfig::clear_clear_cd_cost() {
  clear_cd_cost_ = 0;
  clear_has_clear_cd_cost();
}
inline ::google::protobuf::int32 rank_matchConfig::clear_cd_cost() const {
  return clear_cd_cost_;
}
inline void rank_matchConfig::set_clear_cd_cost(::google::protobuf::int32 value) {
  set_has_clear_cd_cost();
  clear_cd_cost_ = value;
}

// optional int32 id = 1;
inline bool rank_matchConfig::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void rank_matchConfig::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void rank_matchConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void rank_matchConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 rank_matchConfig::id() const {
  return id_;
}
inline void rank_matchConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 calculate_time = 4;
inline bool rank_matchConfig::has_calculate_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void rank_matchConfig::set_has_calculate_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void rank_matchConfig::clear_has_calculate_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void rank_matchConfig::clear_calculate_time() {
  calculate_time_ = 0;
  clear_has_calculate_time();
}
inline ::google::protobuf::int32 rank_matchConfig::calculate_time() const {
  return calculate_time_;
}
inline void rank_matchConfig::set_calculate_time(::google::protobuf::int32 value) {
  set_has_calculate_time();
  calculate_time_ = value;
}

// optional int32 vip_daily_count = 2;
inline bool rank_matchConfig::has_vip_daily_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void rank_matchConfig::set_has_vip_daily_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void rank_matchConfig::clear_has_vip_daily_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void rank_matchConfig::clear_vip_daily_count() {
  vip_daily_count_ = 0;
  clear_has_vip_daily_count();
}
inline ::google::protobuf::int32 rank_matchConfig::vip_daily_count() const {
  return vip_daily_count_;
}
inline void rank_matchConfig::set_vip_daily_count(::google::protobuf::int32 value) {
  set_has_vip_daily_count();
  vip_daily_count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rank_5fmatchConfig_2eproto__INCLUDED
