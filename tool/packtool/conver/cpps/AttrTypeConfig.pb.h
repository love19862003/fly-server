// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AttrTypeConfig.proto

#ifndef PROTOBUF_AttrTypeConfig_2eproto__INCLUDED
#define PROTOBUF_AttrTypeConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AttrTypeConfig_2eproto();
void protobuf_AssignDesc_AttrTypeConfig_2eproto();
void protobuf_ShutdownFile_AttrTypeConfig_2eproto();

class AttrTypeConfig;

// ===================================================================

class AttrTypeConfig : public ::google::protobuf::Message {
 public:
  AttrTypeConfig();
  virtual ~AttrTypeConfig();

  AttrTypeConfig(const AttrTypeConfig& from);

  inline AttrTypeConfig& operator=(const AttrTypeConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttrTypeConfig& default_instance();

  void Swap(AttrTypeConfig* other);

  // implements Message ----------------------------------------------

  AttrTypeConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttrTypeConfig& from);
  void MergeFrom(const AttrTypeConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 atk_fix = 7;
  inline bool has_atk_fix() const;
  inline void clear_atk_fix();
  static const int kAtkFixFieldNumber = 7;
  inline ::google::protobuf::int32 atk_fix() const;
  inline void set_atk_fix(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 str_fix = 4;
  inline bool has_str_fix() const;
  inline void clear_str_fix();
  static const int kStrFixFieldNumber = 4;
  inline ::google::protobuf::int32 str_fix() const;
  inline void set_str_fix(::google::protobuf::int32 value);

  // optional int32 hp_fix = 8;
  inline bool has_hp_fix() const;
  inline void clear_hp_fix();
  static const int kHpFixFieldNumber = 8;
  inline ::google::protobuf::int32 hp_fix() const;
  inline void set_hp_fix(::google::protobuf::int32 value);

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 dom_fix = 6;
  inline bool has_dom_fix() const;
  inline void clear_dom_fix();
  static const int kDomFixFieldNumber = 6;
  inline ::google::protobuf::int32 dom_fix() const;
  inline void set_dom_fix(::google::protobuf::int32 value);

  // optional int32 int_fix = 5;
  inline bool has_int_fix() const;
  inline void clear_int_fix();
  static const int kIntFixFieldNumber = 5;
  inline ::google::protobuf::int32 int_fix() const;
  inline void set_int_fix(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.AttrTypeConfig)
 private:
  inline void set_has_atk_fix();
  inline void clear_has_atk_fix();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_str_fix();
  inline void clear_has_str_fix();
  inline void set_has_hp_fix();
  inline void clear_has_hp_fix();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_dom_fix();
  inline void clear_has_dom_fix();
  inline void set_has_int_fix();
  inline void clear_has_int_fix();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 atk_fix_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 str_fix_;
  ::google::protobuf::int32 hp_fix_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 dom_fix_;
  ::google::protobuf::int32 int_fix_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_AttrTypeConfig_2eproto();
  friend void protobuf_AssignDesc_AttrTypeConfig_2eproto();
  friend void protobuf_ShutdownFile_AttrTypeConfig_2eproto();

  void InitAsDefaultInstance();
  static AttrTypeConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// AttrTypeConfig

// optional int32 atk_fix = 7;
inline bool AttrTypeConfig::has_atk_fix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttrTypeConfig::set_has_atk_fix() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttrTypeConfig::clear_has_atk_fix() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttrTypeConfig::clear_atk_fix() {
  atk_fix_ = 0;
  clear_has_atk_fix();
}
inline ::google::protobuf::int32 AttrTypeConfig::atk_fix() const {
  return atk_fix_;
}
inline void AttrTypeConfig::set_atk_fix(::google::protobuf::int32 value) {
  set_has_atk_fix();
  atk_fix_ = value;
}

// optional int32 type = 2;
inline bool AttrTypeConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttrTypeConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttrTypeConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttrTypeConfig::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AttrTypeConfig::type() const {
  return type_;
}
inline void AttrTypeConfig::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 str_fix = 4;
inline bool AttrTypeConfig::has_str_fix() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttrTypeConfig::set_has_str_fix() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttrTypeConfig::clear_has_str_fix() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttrTypeConfig::clear_str_fix() {
  str_fix_ = 0;
  clear_has_str_fix();
}
inline ::google::protobuf::int32 AttrTypeConfig::str_fix() const {
  return str_fix_;
}
inline void AttrTypeConfig::set_str_fix(::google::protobuf::int32 value) {
  set_has_str_fix();
  str_fix_ = value;
}

// optional int32 hp_fix = 8;
inline bool AttrTypeConfig::has_hp_fix() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttrTypeConfig::set_has_hp_fix() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttrTypeConfig::clear_has_hp_fix() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttrTypeConfig::clear_hp_fix() {
  hp_fix_ = 0;
  clear_has_hp_fix();
}
inline ::google::protobuf::int32 AttrTypeConfig::hp_fix() const {
  return hp_fix_;
}
inline void AttrTypeConfig::set_hp_fix(::google::protobuf::int32 value) {
  set_has_hp_fix();
  hp_fix_ = value;
}

// optional int32 id = 1;
inline bool AttrTypeConfig::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttrTypeConfig::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttrTypeConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttrTypeConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AttrTypeConfig::id() const {
  return id_;
}
inline void AttrTypeConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 level = 3;
inline bool AttrTypeConfig::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AttrTypeConfig::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AttrTypeConfig::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AttrTypeConfig::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 AttrTypeConfig::level() const {
  return level_;
}
inline void AttrTypeConfig::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 dom_fix = 6;
inline bool AttrTypeConfig::has_dom_fix() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AttrTypeConfig::set_has_dom_fix() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AttrTypeConfig::clear_has_dom_fix() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AttrTypeConfig::clear_dom_fix() {
  dom_fix_ = 0;
  clear_has_dom_fix();
}
inline ::google::protobuf::int32 AttrTypeConfig::dom_fix() const {
  return dom_fix_;
}
inline void AttrTypeConfig::set_dom_fix(::google::protobuf::int32 value) {
  set_has_dom_fix();
  dom_fix_ = value;
}

// optional int32 int_fix = 5;
inline bool AttrTypeConfig::has_int_fix() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AttrTypeConfig::set_has_int_fix() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AttrTypeConfig::clear_has_int_fix() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AttrTypeConfig::clear_int_fix() {
  int_fix_ = 0;
  clear_has_int_fix();
}
inline ::google::protobuf::int32 AttrTypeConfig::int_fix() const {
  return int_fix_;
}
inline void AttrTypeConfig::set_int_fix(::google::protobuf::int32 value) {
  set_has_int_fix();
  int_fix_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AttrTypeConfig_2eproto__INCLUDED
