// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TalentSkillConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TalentSkillConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

namespace {

const ::google::protobuf::Descriptor* TalentSkillConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TalentSkillConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TalentSkillConfig_2eproto() {
  protobuf_AddDesc_TalentSkillConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TalentSkillConfig.proto");
  GOOGLE_CHECK(file != NULL);
  TalentSkillConfig_descriptor_ = file->message_type(0);
  static const int TalentSkillConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, skill_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, d3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, skill_description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, d1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, talent_limit_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, para_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, d2_),
  };
  TalentSkillConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TalentSkillConfig_descriptor_,
      TalentSkillConfig::default_instance_,
      TalentSkillConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalentSkillConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TalentSkillConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TalentSkillConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TalentSkillConfig_descriptor_, &TalentSkillConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TalentSkillConfig_2eproto() {
  delete TalentSkillConfig::default_instance_;
  delete TalentSkillConfig_reflection_;
}

void protobuf_AddDesc_TalentSkillConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DianShiTech::Config::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027TalentSkillConfig.proto\022\022DianShiTech.C"
    "onfig\032\025ConfigTypeGroup.proto\"\232\001\n\021TalentS"
    "killConfig\022\022\n\nskill_name\030\002 \001(\t\022\n\n\002d3\030\006 \001"
    "(\t\022\031\n\021skill_description\030\003 \001(\t\022\n\n\002d1\030\004 \001("
    "\t\022\n\n\002id\030\001 \001(\005\022\030\n\020talent_limit_add\030\010 \001(\005\022"
    "\014\n\004para\030\007 \001(\005\022\n\n\002d2\030\005 \001(\t", 225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TalentSkillConfig.proto", &protobuf_RegisterTypes);
  TalentSkillConfig::default_instance_ = new TalentSkillConfig();
  TalentSkillConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TalentSkillConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TalentSkillConfig_2eproto {
  StaticDescriptorInitializer_TalentSkillConfig_2eproto() {
    protobuf_AddDesc_TalentSkillConfig_2eproto();
  }
} static_descriptor_initializer_TalentSkillConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TalentSkillConfig::kSkillNameFieldNumber;
const int TalentSkillConfig::kD3FieldNumber;
const int TalentSkillConfig::kSkillDescriptionFieldNumber;
const int TalentSkillConfig::kD1FieldNumber;
const int TalentSkillConfig::kIdFieldNumber;
const int TalentSkillConfig::kTalentLimitAddFieldNumber;
const int TalentSkillConfig::kParaFieldNumber;
const int TalentSkillConfig::kD2FieldNumber;
#endif  // !_MSC_VER

TalentSkillConfig::TalentSkillConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TalentSkillConfig::InitAsDefaultInstance() {
}

TalentSkillConfig::TalentSkillConfig(const TalentSkillConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TalentSkillConfig::SharedCtor() {
  _cached_size_ = 0;
  skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  d3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skill_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  d1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = 0;
  talent_limit_add_ = 0;
  para_ = 0;
  d2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TalentSkillConfig::~TalentSkillConfig() {
  SharedDtor();
}

void TalentSkillConfig::SharedDtor() {
  if (skill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete skill_name_;
  }
  if (d3_ != &::google::protobuf::internal::kEmptyString) {
    delete d3_;
  }
  if (skill_description_ != &::google::protobuf::internal::kEmptyString) {
    delete skill_description_;
  }
  if (d1_ != &::google::protobuf::internal::kEmptyString) {
    delete d1_;
  }
  if (d2_ != &::google::protobuf::internal::kEmptyString) {
    delete d2_;
  }
  if (this != default_instance_) {
  }
}

void TalentSkillConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalentSkillConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TalentSkillConfig_descriptor_;
}

const TalentSkillConfig& TalentSkillConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TalentSkillConfig_2eproto();
  return *default_instance_;
}

TalentSkillConfig* TalentSkillConfig::default_instance_ = NULL;

TalentSkillConfig* TalentSkillConfig::New() const {
  return new TalentSkillConfig;
}

void TalentSkillConfig::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_skill_name()) {
      if (skill_name_ != &::google::protobuf::internal::kEmptyString) {
        skill_name_->clear();
      }
    }
    if (has_d3()) {
      if (d3_ != &::google::protobuf::internal::kEmptyString) {
        d3_->clear();
      }
    }
    if (has_skill_description()) {
      if (skill_description_ != &::google::protobuf::internal::kEmptyString) {
        skill_description_->clear();
      }
    }
    if (has_d1()) {
      if (d1_ != &::google::protobuf::internal::kEmptyString) {
        d1_->clear();
      }
    }
    id_ = 0;
    talent_limit_add_ = 0;
    para_ = 0;
    if (has_d2()) {
      if (d2_ != &::google::protobuf::internal::kEmptyString) {
        d2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TalentSkillConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skill_name;
        break;
      }

      // optional string skill_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skill_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skill_name().data(), this->skill_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_skill_description;
        break;
      }

      // optional string skill_description = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skill_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skill_description().data(), this->skill_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_d1;
        break;
      }

      // optional string d1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_d1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_d1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->d1().data(), this->d1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_d2;
        break;
      }

      // optional string d2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_d2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_d2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->d2().data(), this->d2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_d3;
        break;
      }

      // optional string d3 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_d3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_d3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->d3().data(), this->d3().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_para;
        break;
      }

      // optional int32 para = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_para:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &para_)));
          set_has_para();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_talent_limit_add;
        break;
      }

      // optional int32 talent_limit_add = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_talent_limit_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talent_limit_add_)));
          set_has_talent_limit_add();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TalentSkillConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string skill_name = 2;
  if (has_skill_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skill_name().data(), this->skill_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->skill_name(), output);
  }

  // optional string skill_description = 3;
  if (has_skill_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skill_description().data(), this->skill_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->skill_description(), output);
  }

  // optional string d1 = 4;
  if (has_d1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->d1().data(), this->d1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->d1(), output);
  }

  // optional string d2 = 5;
  if (has_d2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->d2().data(), this->d2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->d2(), output);
  }

  // optional string d3 = 6;
  if (has_d3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->d3().data(), this->d3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->d3(), output);
  }

  // optional int32 para = 7;
  if (has_para()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->para(), output);
  }

  // optional int32 talent_limit_add = 8;
  if (has_talent_limit_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->talent_limit_add(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TalentSkillConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string skill_name = 2;
  if (has_skill_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skill_name().data(), this->skill_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->skill_name(), target);
  }

  // optional string skill_description = 3;
  if (has_skill_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skill_description().data(), this->skill_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->skill_description(), target);
  }

  // optional string d1 = 4;
  if (has_d1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->d1().data(), this->d1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->d1(), target);
  }

  // optional string d2 = 5;
  if (has_d2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->d2().data(), this->d2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->d2(), target);
  }

  // optional string d3 = 6;
  if (has_d3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->d3().data(), this->d3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->d3(), target);
  }

  // optional int32 para = 7;
  if (has_para()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->para(), target);
  }

  // optional int32 talent_limit_add = 8;
  if (has_talent_limit_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->talent_limit_add(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TalentSkillConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string skill_name = 2;
    if (has_skill_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skill_name());
    }

    // optional string d3 = 6;
    if (has_d3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->d3());
    }

    // optional string skill_description = 3;
    if (has_skill_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skill_description());
    }

    // optional string d1 = 4;
    if (has_d1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->d1());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 talent_limit_add = 8;
    if (has_talent_limit_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->talent_limit_add());
    }

    // optional int32 para = 7;
    if (has_para()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->para());
    }

    // optional string d2 = 5;
    if (has_d2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->d2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalentSkillConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TalentSkillConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TalentSkillConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TalentSkillConfig::MergeFrom(const TalentSkillConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_name()) {
      set_skill_name(from.skill_name());
    }
    if (from.has_d3()) {
      set_d3(from.d3());
    }
    if (from.has_skill_description()) {
      set_skill_description(from.skill_description());
    }
    if (from.has_d1()) {
      set_d1(from.d1());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_talent_limit_add()) {
      set_talent_limit_add(from.talent_limit_add());
    }
    if (from.has_para()) {
      set_para(from.para());
    }
    if (from.has_d2()) {
      set_d2(from.d2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TalentSkillConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalentSkillConfig::CopyFrom(const TalentSkillConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalentSkillConfig::IsInitialized() const {

  return true;
}

void TalentSkillConfig::Swap(TalentSkillConfig* other) {
  if (other != this) {
    std::swap(skill_name_, other->skill_name_);
    std::swap(d3_, other->d3_);
    std::swap(skill_description_, other->skill_description_);
    std::swap(d1_, other->d1_);
    std::swap(id_, other->id_);
    std::swap(talent_limit_add_, other->talent_limit_add_);
    std::swap(para_, other->para_);
    std::swap(d2_, other->d2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TalentSkillConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TalentSkillConfig_descriptor_;
  metadata.reflection = TalentSkillConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

// @@protoc_insertion_point(global_scope)
