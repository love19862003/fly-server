// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WeekLivenessConfig.proto

#ifndef PROTOBUF_WeekLivenessConfig_2eproto__INCLUDED
#define PROTOBUF_WeekLivenessConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace DianShiTech {
namespace Config {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WeekLivenessConfig_2eproto();
void protobuf_AssignDesc_WeekLivenessConfig_2eproto();
void protobuf_ShutdownFile_WeekLivenessConfig_2eproto();

class WeekLivenessConfig;

// ===================================================================

class WeekLivenessConfig : public ::google::protobuf::Message {
 public:
  WeekLivenessConfig();
  virtual ~WeekLivenessConfig();

  WeekLivenessConfig(const WeekLivenessConfig& from);

  inline WeekLivenessConfig& operator=(const WeekLivenessConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeekLivenessConfig& default_instance();

  void Swap(WeekLivenessConfig* other);

  // implements Message ----------------------------------------------

  WeekLivenessConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeekLivenessConfig& from);
  void MergeFrom(const WeekLivenessConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .DianShiTech.Config.ConfigTypeGroup bonus = 4;
  inline int bonus_size() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 4;
  inline const ::DianShiTech::Config::ConfigTypeGroup& bonus(int index) const;
  inline ::DianShiTech::Config::ConfigTypeGroup* mutable_bonus(int index);
  inline ::DianShiTech::Config::ConfigTypeGroup* add_bonus();
  inline const ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >&
      bonus() const;
  inline ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >*
      mutable_bonus();

  // optional int32 min_liveness = 2;
  inline bool has_min_liveness() const;
  inline void clear_min_liveness();
  static const int kMinLivenessFieldNumber = 2;
  inline ::google::protobuf::int32 min_liveness() const;
  inline void set_min_liveness(::google::protobuf::int32 value);

  // optional int32 max_liveness = 3;
  inline bool has_max_liveness() const;
  inline void clear_max_liveness();
  static const int kMaxLivenessFieldNumber = 3;
  inline ::google::protobuf::int32 max_liveness() const;
  inline void set_max_liveness(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DianShiTech.Config.WeekLivenessConfig)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_min_liveness();
  inline void clear_has_min_liveness();
  inline void set_has_max_liveness();
  inline void clear_has_max_liveness();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup > bonus_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 min_liveness_;
  ::google::protobuf::int32 max_liveness_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_WeekLivenessConfig_2eproto();
  friend void protobuf_AssignDesc_WeekLivenessConfig_2eproto();
  friend void protobuf_ShutdownFile_WeekLivenessConfig_2eproto();

  void InitAsDefaultInstance();
  static WeekLivenessConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// WeekLivenessConfig

// optional int32 id = 1;
inline bool WeekLivenessConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WeekLivenessConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WeekLivenessConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WeekLivenessConfig::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WeekLivenessConfig::id() const {
  return id_;
}
inline void WeekLivenessConfig::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .DianShiTech.Config.ConfigTypeGroup bonus = 4;
inline int WeekLivenessConfig::bonus_size() const {
  return bonus_.size();
}
inline void WeekLivenessConfig::clear_bonus() {
  bonus_.Clear();
}
inline const ::DianShiTech::Config::ConfigTypeGroup& WeekLivenessConfig::bonus(int index) const {
  return bonus_.Get(index);
}
inline ::DianShiTech::Config::ConfigTypeGroup* WeekLivenessConfig::mutable_bonus(int index) {
  return bonus_.Mutable(index);
}
inline ::DianShiTech::Config::ConfigTypeGroup* WeekLivenessConfig::add_bonus() {
  return bonus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >&
WeekLivenessConfig::bonus() const {
  return bonus_;
}
inline ::google::protobuf::RepeatedPtrField< ::DianShiTech::Config::ConfigTypeGroup >*
WeekLivenessConfig::mutable_bonus() {
  return &bonus_;
}

// optional int32 min_liveness = 2;
inline bool WeekLivenessConfig::has_min_liveness() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WeekLivenessConfig::set_has_min_liveness() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WeekLivenessConfig::clear_has_min_liveness() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WeekLivenessConfig::clear_min_liveness() {
  min_liveness_ = 0;
  clear_has_min_liveness();
}
inline ::google::protobuf::int32 WeekLivenessConfig::min_liveness() const {
  return min_liveness_;
}
inline void WeekLivenessConfig::set_min_liveness(::google::protobuf::int32 value) {
  set_has_min_liveness();
  min_liveness_ = value;
}

// optional int32 max_liveness = 3;
inline bool WeekLivenessConfig::has_max_liveness() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WeekLivenessConfig::set_has_max_liveness() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WeekLivenessConfig::clear_has_max_liveness() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WeekLivenessConfig::clear_max_liveness() {
  max_liveness_ = 0;
  clear_has_max_liveness();
}
inline ::google::protobuf::int32 WeekLivenessConfig::max_liveness() const {
  return max_liveness_;
}
inline void WeekLivenessConfig::set_max_liveness(::google::protobuf::int32 value) {
  set_has_max_liveness();
  max_liveness_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Config
}  // namespace DianShiTech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WeekLivenessConfig_2eproto__INCLUDED
